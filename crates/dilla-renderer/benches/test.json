[
  {
    "@library": {
      "dependencies": [
        "test/test.dependency"
      ]
    }
  },
  {
    "@attached": [
      {
        "@element": "link",
        "href": "?page=2",
        "rel": "next"
      },
      {
        "@element": "base",
        "target": "_blank"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@element": "empty",
    "@library": {
      "dependencies": [
        "test/test.dependency-payload"
      ]
    }
  },
  {
    "@element": "span",
    "@content": "foo",
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-1"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-2"
      }
    ]
  },
  {
    "@element": "span",
    "@content": {
      "@element": "em",
      "@content": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@element": "em",
    "@content": {
      "@element": "span",
      "@content": "bar",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-2"
      }
    }
  },
  {
    "@element": "em",
    "@content": [
      "foo",
      {
        "@element": "span",
        "@content": "bar",
        "@attached": {
          "@element": "meta",
          "name": "NESTED-3"
        }
      }
    ],
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-3"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-4"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": true
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": true
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": true
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": true
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": "foo",
      "@variables": {
        ".sidebar": {
          "var-1": "SUB-SUB-SIDEBAR"
        }
      }
    }
  },
  {
    "@component": "other",
    "label": "foo",
    "text": [
      " bar ",
      {
        "@component": "other",
        "label": "some",
        "attributes": {
          "data-some": "stuff"
        }
      }
    ],
    "attributes": {
      "data-foo": "bar",
      "class": [
        "from",
        "payload",
        "bar"
      ]
    }
  },
  {
    "@component": "other",
    "@variant": "variant",
    "text": "is variant"
  },
  {
    "@component": "other",
    "@variant": "invalid-variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "variant": "variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "variant": "invalid-variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "@variant": "variant",
    "variant": "variant2",
    "text": "is variant"
  },
  {
    "@component": "other",
    "@variant": "variant2",
    "variant": "variant",
    "text": "is variant2"
  },
  [
    {
      "@component": "test",
      "label": "<span>Escape me!</span>"
    },
    {
      "@component": "test",
      "label": "foo",
      "text": [
        " bar ",
        {
          "@component": "test",
          "label": "some",
          "attributes": {
            "data-some": "stuff"
          }
        }
      ],
      "attributes": {
        "data-foo": "bar",
        "class": [
          "from",
          "payload",
          "bar"
        ]
      }
    }
  ],
  {
    "@component": "test",
    "label": "dark attribute",
    "@theme": "dark"
  },
  {
    "@component": "test",
    "label": "dark class",
    "@theme": "dark-class"
  },
  {
    "@component": "test",
    "label": "theme not in config",
    "@theme": "unknown"
  },
  {
    "@component": "test",
    "label": "empty theme",
    "@theme": ""
  },
  {
    "@component": "test",
    "label": "invalid array theme",
    "@theme": [
      "dark"
    ]
  },
  {
    "@component": "test",
    "label": "invalid obj theme",
    "@theme": {
      "dark": "dark"
    }
  },
  {
    "@component": "test",
    "label": "no",
    "text": "attributes"
  },
  {
    "@component": "test",
    "label": "with",
    "text": "@attributes",
    "@attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "attributes",
    "attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "@attributes and attributes",
    "@attributes": {
      "foo": "bar"
    },
    "attributes": {
      "foo": "overridden"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "attributes and @attributes",
    "attributes": {
      "foo": "overridden"
    },
    "@attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "mixed types @attributes",
    "@attributes": {
      "class": [
        "foo",
        "bar"
      ],
      "style": {
        "--var-1:": "#222;",
        "--var-2:": "#333;"
      },
      "data-array": [
        "arr1",
        "arr2"
      ],
      "data-obj": {
        "k1": "v1",
        "k2": "v2"
      },
      "data-str": "lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "child attributes as label_attributes",
    "label_attributes": {
      "class": [
        "label_foo",
        "label_bar"
      ],
      "style": {
        "--var-1:": "#label_222;",
        "--var-2:": "#label_333;"
      },
      "data-array": [
        "label_arr1",
        "label_arr2"
      ],
      "data-obj": {
        "label_k1": "label_v1",
        "label_k2": "label_v2"
      },
      "data-str": "label_lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    }
  },
  {
    "@attached": [
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@component": "other",
    "label": [
      [
        "bar"
      ],
      {
        "@component": "other",
        "@variant": "variant",
        "label": "bar",
        "@attached": [
          {
            "@element": "meta",
            "name": "component-field-1"
          },
          {
            "@element": "meta",
            "name": "component-field-2"
          }
        ]
      }
    ]
  },
  {
    "@component": "test",
    "label": {
      "@component": "test",
      "label": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@component": "test",
    "label": "some",
    "@attached": [
      {
        "@element": "meta",
        "name": "component-1"
      },
      {
        "@element": "meta",
        "name": "component-2"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@component": "test_with_library",
    "@library": {
      "css": {
        "payload.css": {
          "media": "screen"
        }
      },
      "js": {
        "payload.js": {
          "async": true
        }
      }
    }
  },
  {
    "@component": "test",
    "label": "foo",
    "text": [
      [
        "then",
        {
          "@component": "other",
          "label": "bar",
          "@library": {
            "css": {
              "inside-array.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside-array.js": {
                "async": true
              }
            }
          }
        }
      ],
      {
        "@component": "test",
        "label": "bar"
      },
      {
        "@component": "test",
        "label": "stuff"
      },
      {
        "@library": {
          "css": {
            "inside.css": {
              "media": "screen"
            }
          },
          "js": {
            "inside.js": {
              "async": true
            }
          }
        }
      }
    ],
    "@library": {
      "css": {
        "foo.css": {
          "media": "screen"
        }
      },
      "js": {
        "foo.js": {
          "async": true
        }
      }
    }
  },
  {
    "@component": "test",
    "label": "LABEL",
    "text": [
      " MY ",
      {
        "@component": "test",
        "label": "some",
        "attributes": {
          "data-some": "stuff"
        },
        "@local_variables": {
          "var-1": "#222222"
        },
        "@variables": {
          ":root": {
            "var-2": "SUB-SUB-ROOT"
          }
        }
      }
    ]
  },
  {
    "@component": "test_attribute"
  },
  {
    "@element": "span",
    "@content": "foo",
    "@local_variables": {
      "var-1": "#222222",
      "var-2": "#333333",
      "var-3": "#444444",
      "var-3-will-be-ignored": "because default",
      "ignored": "no-value"
    }
  },
  {
    "@element": "code",
    "@content": "<span>Escape me!</span>"
  },
  {
    "@element": "code",
    "@content": "<span>Escape url: http://some.com !</span>"
  },
  {
    "@element": "div",
    "id": "intro",
    "class": [
      "title",
      "xl"
    ],
    "@content": [
      "Content as ",
      {
        "@element": "a",
        "href": "http://foo.org",
        "data-href": "href",
        "@content": [
          {
            "@element": "span",
            "@content": {
              "@element": "strong",
              "@content": "foo ",
              "data-bar": "bar"
            }
          },
          {
            "@element": "span",
            "@content": "bar ",
            "data-foo": "foo"
          },
          "&& "
        ]
      },
      "with ",
      "like ",
      {
        "@element": "p",
        "class": "bold",
        "@content": {
          "@element": "span",
          "data-strong": "strong",
          "@content": [
            "inside ",
            {
              "@element": "em",
              "@content": "and more",
              "data-em": "em"
            }
          ]
        }
      },
      true,
      42,
      42.42424242,
      -42,
      -42.42424242
    ]
  },
  {
    "@element": "span",
    "@content": "Test attributes types",
    "class": [
      "foo",
      "bar"
    ],
    "style": "border: 1px;",
    "data": "test",
    "data-array": [
      "arr1",
      "arr2"
    ],
    "data-obj": {
      "k1": "v1",
      "k2": "v2"
    },
    "data-str": "lorem",
    "data-bool": true,
    "data-num": 45,
    "data-num-neg": -45,
    "data-float": 45.33,
    "data-float-neg": -45.33
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo",
    "@theme": "dark"
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo",
    "@theme": "dark-class"
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo"
  },
  {
    "@element": "p",
    "class": [
      "class-1",
      "class-2",
      "class-3"
    ],
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "data-foo": "bar",
    "@content": "foo"
  },
  {
    "@element": "elem-1"
  },
  {
    "@element": "elem-2",
    "@content": "foo1"
  },
  {
    "@element": "elem-3",
    "@content": {
      "@element": "elem-4",
      "@content": "foo2"
    }
  },
  {
    "@element": "elem-5",
    "@content": [
      {
        "@element": "elem-6",
        "@content": "foo3"
      },
      {
        "@element": "elem-7",
        "@content": "foo4"
      }
    ]
  },
  {
    "@element": "elem-8",
    "@content": {
      "@element": "elem-9",
      "@content": {
        "@element": "elem-10",
        "@content": {
          "@element": "elem-11",
          "@content": {
            "@element": "elem-12",
            "@content": "foo5"
          }
        }
      }
    }
  },
  {
    "@element": "elem-13",
    "@content": [
      {
        "@element": "elem-14",
        "@content": [
          {
            "@element": "elem-15",
            "@content": [
              {
                "@element": "elem-16",
                "@content": [
                  {
                    "@element": "elem-17",
                    "@content": "foo6"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "@element": "elem-18",
        "@content": [
          {
            "@element": "elem-19",
            "@content": [
              {
                "@element": "elem-20",
                "@content": [
                  {
                    "@element": "elem-21",
                    "@content": "foo7"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "@variables": {
      ".test": {
        "var-1": "overridden",
        "var-1-do-not-exist": "do-not-exist"
      }
    }
  },
  [
    {
      "@variables": {
        ".test": {
          "var-1": "overridden again"
        }
      }
    }
  ],
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": {
        "@element": "div",
        "@content": {
          "@element": "span",
          "@content": "foo",
          "@variables": {
            ".test": {
              "var-1": "inside is overridden"
            }
          }
        }
      },
      "@variables": {
        ".test": {
          "var-1": "inside"
        }
      }
    },
    "@variables": {
      ".test": {
        "var-1": "outside"
      }
    }
  },
  {
    "@template": "<span{{ {'class': 'foo'} }}>{{ test }}<em>{{ some }}</em>?</span>",
    "test": "My test",
    "some": "is working"
  },
  {
    "@template": "<span{{ attr }}><span{{ foo }}>{{ test }}</span></span>",
    "test": "My test",
    "attr": {
      "class": [
        "foo",
        "bar"
      ],
      "style": {
        "--var-1:": "#222;",
        "--var-2:": "#333;"
      },
      "data-array": [
        "arr1",
        "arr2"
      ],
      "data-obj": {
        "k1": "v1",
        "k2": "v2"
      },
      "data-str": "lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    },
    "foo": {
      "data": [
        "foo",
        "bar"
      ]
    }
  },
  {
    "# Test nested var access and safe filter": "",
    "@template": "{{ test }} {{ nested.foo }} {{ nested_more[0].foo }}? {{ safe|safe }}",
    "test": "My test",
    "nested": {
      "foo": "is working"
    },
    "nested_more": [
      {
        "foo": "well"
      }
    ],
    "safe": "<b>is it?</b>"
  },
  {
    "# Test a common ui_suite variant set": "",
    "@template": "{% set test = {}|add_class('test-' ~ variant|lower|replace('_', '-')) %}{{ test }}",
    "variant": "sOmE__VaRiANT_EXpAND-ok"
  },
  {
    "# Test a common ui_suite multiple variants set": "",
    "@template": "{% set variants = variant|split('__')|map('lower')|map('prepend', 'test-')|map('replace', '_', '-') %}{% set test = {}|add_class(variants) %}{{ test }}",
    "variant": "VaRiANTS__mUltIPLE___SOmE____OTher_____fiNAL"
  },
  {
    "@component": "test_t",
    "@trans": {
      "Var": "Variable",
      "Hello": "Bonjour",
      "Hello @name!": "Bonjour @name!",
      "Your number is @num": "Votre nombre est @num",
      "Hello @name where is @other_name?": "Bonjour @name où est @other_name?"
    }
  },
  {
    "@template": "{{ 'Hi'|t }}\n{{ 'Hi @name!'|t({'@name': 'John'}) }}",
    "@trans": {
      "Hi": "Bonjour",
      "Hi @name!": "Bonjour @name!"
    }
  },
  {
    "@component": "test_filters"
  },
  "# filter add_class() on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "class": "foo",
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "class": "foo",
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter add_class() on renderable @element",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "class": "foo",
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "class": [
        "foo",
        "bar"
      ],
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": [
      {
        "@element": "p",
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    ]
  },
  "# filter set_attribute() on renderable @element",
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@element": "p"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@element": "p",
      "data": "foo"
    }
  },
  "# filter set_attribute() on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@component": "attributes",
      "text": " - no attributes"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter chained on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable_chained": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter on undefined renderable",
  {
    "@component": "test_filters_renderable",
    "test_undefined": true
  },
  "# filter on renderable @template",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@template": "<span class=\"foo\">{{ test }}</span>",
      "test": "foo"
    }
  },
  {
    "@variables": {
      ".test": {
        "var-1": "overridden",
        "var-1-do-not-exist": "do-not-exist"
      }
    }
  },
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": "foo",
      "@variables": {
        ".test": {
          "var-1": "orange"
        }
      }
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": "true"
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": "true"
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@attached": [
      {
        "@element": "link",
        "href": "?page=2",
        "rel": "next"
      },
      {
        "@element": "base",
        "target": "_blank"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@element": "empty"
  },
  {
    "@element": "span",
    "@content": "foo",
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-1"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-2"
      }
    ]
  },
  {
    "@element": "span",
    "@content": {
      "@element": "em",
      "@content": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@element": "em",
    "@content": {
      "@element": "span",
      "@content": "bar",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-2"
      }
    }
  },
  {
    "@element": "em",
    "@content": [
      "foo",
      {
        "@element": "span",
        "@content": "bar",
        "@attached": {
          "@element": "meta",
          "name": "NESTED-3"
        }
      }
    ],
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-3"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-4"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@library": {
      "dependencies": [
        "test/test.dependency"
      ]
    }
  },
  {
    "@attached": [
      {
        "@element": "link",
        "href": "?page=2",
        "rel": "next"
      },
      {
        "@element": "base",
        "target": "_blank"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@element": "empty",
    "@library": {
      "dependencies": [
        "test/test.dependency-payload"
      ]
    }
  },
  {
    "@element": "span",
    "@content": "foo",
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-1"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-2"
      }
    ]
  },
  {
    "@element": "span",
    "@content": {
      "@element": "em",
      "@content": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@element": "em",
    "@content": {
      "@element": "span",
      "@content": "bar",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-2"
      }
    }
  },
  {
    "@element": "em",
    "@content": [
      "foo",
      {
        "@element": "span",
        "@content": "bar",
        "@attached": {
          "@element": "meta",
          "name": "NESTED-3"
        }
      }
    ],
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-3"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-4"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": true
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": true
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": true
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": true
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": "foo",
      "@variables": {
        ".sidebar": {
          "var-1": "SUB-SUB-SIDEBAR"
        }
      }
    }
  },
  {
    "@component": "other",
    "label": "foo",
    "text": [
      " bar ",
      {
        "@component": "other",
        "label": "some",
        "attributes": {
          "data-some": "stuff"
        }
      }
    ],
    "attributes": {
      "data-foo": "bar",
      "class": [
        "from",
        "payload",
        "bar"
      ]
    }
  },
  {
    "@component": "other",
    "@variant": "variant",
    "text": "is variant"
  },
  {
    "@component": "other",
    "@variant": "invalid-variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "variant": "variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "variant": "invalid-variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "@variant": "variant",
    "variant": "variant2",
    "text": "is variant"
  },
  {
    "@component": "other",
    "@variant": "variant2",
    "variant": "variant",
    "text": "is variant2"
  },
  [
    {
      "@component": "test",
      "label": "<span>Escape me!</span>"
    },
    {
      "@component": "test",
      "label": "foo",
      "text": [
        " bar ",
        {
          "@component": "test",
          "label": "some",
          "attributes": {
            "data-some": "stuff"
          }
        }
      ],
      "attributes": {
        "data-foo": "bar",
        "class": [
          "from",
          "payload",
          "bar"
        ]
      }
    }
  ],
  {
    "@component": "test",
    "label": "dark attribute",
    "@theme": "dark"
  },
  {
    "@component": "test",
    "label": "dark class",
    "@theme": "dark-class"
  },
  {
    "@component": "test",
    "label": "theme not in config",
    "@theme": "unknown"
  },
  {
    "@component": "test",
    "label": "empty theme",
    "@theme": ""
  },
  {
    "@component": "test",
    "label": "invalid array theme",
    "@theme": [
      "dark"
    ]
  },
  {
    "@component": "test",
    "label": "invalid obj theme",
    "@theme": {
      "dark": "dark"
    }
  },
  {
    "@component": "test",
    "label": "no",
    "text": "attributes"
  },
  {
    "@component": "test",
    "label": "with",
    "text": "@attributes",
    "@attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "attributes",
    "attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "@attributes and attributes",
    "@attributes": {
      "foo": "bar"
    },
    "attributes": {
      "foo": "overridden"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "attributes and @attributes",
    "attributes": {
      "foo": "overridden"
    },
    "@attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "mixed types @attributes",
    "@attributes": {
      "class": [
        "foo",
        "bar"
      ],
      "style": {
        "--var-1:": "#222;",
        "--var-2:": "#333;"
      },
      "data-array": [
        "arr1",
        "arr2"
      ],
      "data-obj": {
        "k1": "v1",
        "k2": "v2"
      },
      "data-str": "lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "child attributes as label_attributes",
    "label_attributes": {
      "class": [
        "label_foo",
        "label_bar"
      ],
      "style": {
        "--var-1:": "#label_222;",
        "--var-2:": "#label_333;"
      },
      "data-array": [
        "label_arr1",
        "label_arr2"
      ],
      "data-obj": {
        "label_k1": "label_v1",
        "label_k2": "label_v2"
      },
      "data-str": "label_lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    }
  },
  {
    "@attached": [
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@component": "other",
    "label": [
      [
        "bar"
      ],
      {
        "@component": "other",
        "@variant": "variant",
        "label": "bar",
        "@attached": [
          {
            "@element": "meta",
            "name": "component-field-1"
          },
          {
            "@element": "meta",
            "name": "component-field-2"
          }
        ]
      }
    ]
  },
  {
    "@component": "test",
    "label": {
      "@component": "test",
      "label": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@component": "test",
    "label": "some",
    "@attached": [
      {
        "@element": "meta",
        "name": "component-1"
      },
      {
        "@element": "meta",
        "name": "component-2"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@component": "test_with_library",
    "@library": {
      "css": {
        "payload.css": {
          "media": "screen"
        }
      },
      "js": {
        "payload.js": {
          "async": true
        }
      }
    }
  },
  {
    "@component": "test",
    "label": "foo",
    "text": [
      [
        "then",
        {
          "@component": "other",
          "label": "bar",
          "@library": {
            "css": {
              "inside-array.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside-array.js": {
                "async": true
              }
            }
          }
        }
      ],
      {
        "@component": "test",
        "label": "bar"
      },
      {
        "@component": "test",
        "label": "stuff"
      },
      {
        "@library": {
          "css": {
            "inside.css": {
              "media": "screen"
            }
          },
          "js": {
            "inside.js": {
              "async": true
            }
          }
        }
      }
    ],
    "@library": {
      "css": {
        "foo.css": {
          "media": "screen"
        }
      },
      "js": {
        "foo.js": {
          "async": true
        }
      }
    }
  },
  {
    "@component": "test",
    "label": "LABEL",
    "text": [
      " MY ",
      {
        "@component": "test",
        "label": "some",
        "attributes": {
          "data-some": "stuff"
        },
        "@local_variables": {
          "var-1": "#222222"
        },
        "@variables": {
          ":root": {
            "var-2": "SUB-SUB-ROOT"
          }
        }
      }
    ]
  },
  {
    "@component": "test_attribute"
  },
  {
    "@element": "span",
    "@content": "foo",
    "@local_variables": {
      "var-1": "#222222",
      "var-2": "#333333",
      "var-3": "#444444",
      "var-3-will-be-ignored": "because default",
      "ignored": "no-value"
    }
  },
  {
    "@element": "code",
    "@content": "<span>Escape me!</span>"
  },
  {
    "@element": "code",
    "@content": "<span>Escape url: http://some.com !</span>"
  },
  {
    "@element": "div",
    "id": "intro",
    "class": [
      "title",
      "xl"
    ],
    "@content": [
      "Content as ",
      {
        "@element": "a",
        "href": "http://foo.org",
        "data-href": "href",
        "@content": [
          {
            "@element": "span",
            "@content": {
              "@element": "strong",
              "@content": "foo ",
              "data-bar": "bar"
            }
          },
          {
            "@element": "span",
            "@content": "bar ",
            "data-foo": "foo"
          },
          "&& "
        ]
      },
      "with ",
      "like ",
      {
        "@element": "p",
        "class": "bold",
        "@content": {
          "@element": "span",
          "data-strong": "strong",
          "@content": [
            "inside ",
            {
              "@element": "em",
              "@content": "and more",
              "data-em": "em"
            }
          ]
        }
      },
      true,
      42,
      42.42424242,
      -42,
      -42.42424242
    ]
  },
  {
    "@element": "span",
    "@content": "Test attributes types",
    "class": [
      "foo",
      "bar"
    ],
    "style": "border: 1px;",
    "data": "test",
    "data-array": [
      "arr1",
      "arr2"
    ],
    "data-obj": {
      "k1": "v1",
      "k2": "v2"
    },
    "data-str": "lorem",
    "data-bool": true,
    "data-num": 45,
    "data-num-neg": -45,
    "data-float": 45.33,
    "data-float-neg": -45.33
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo",
    "@theme": "dark"
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo",
    "@theme": "dark-class"
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo"
  },
  {
    "@element": "p",
    "class": [
      "class-1",
      "class-2",
      "class-3"
    ],
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "data-foo": "bar",
    "@content": "foo"
  },
  {
    "@element": "elem-1"
  },
  {
    "@element": "elem-2",
    "@content": "foo1"
  },
  {
    "@element": "elem-3",
    "@content": {
      "@element": "elem-4",
      "@content": "foo2"
    }
  },
  {
    "@element": "elem-5",
    "@content": [
      {
        "@element": "elem-6",
        "@content": "foo3"
      },
      {
        "@element": "elem-7",
        "@content": "foo4"
      }
    ]
  },
  {
    "@element": "elem-8",
    "@content": {
      "@element": "elem-9",
      "@content": {
        "@element": "elem-10",
        "@content": {
          "@element": "elem-11",
          "@content": {
            "@element": "elem-12",
            "@content": "foo5"
          }
        }
      }
    }
  },
  {
    "@element": "elem-13",
    "@content": [
      {
        "@element": "elem-14",
        "@content": [
          {
            "@element": "elem-15",
            "@content": [
              {
                "@element": "elem-16",
                "@content": [
                  {
                    "@element": "elem-17",
                    "@content": "foo6"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "@element": "elem-18",
        "@content": [
          {
            "@element": "elem-19",
            "@content": [
              {
                "@element": "elem-20",
                "@content": [
                  {
                    "@element": "elem-21",
                    "@content": "foo7"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "@variables": {
      ".test": {
        "var-1": "overridden",
        "var-1-do-not-exist": "do-not-exist"
      }
    }
  },
  [
    {
      "@variables": {
        ".test": {
          "var-1": "overridden again"
        }
      }
    }
  ],
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": {
        "@element": "div",
        "@content": {
          "@element": "span",
          "@content": "foo",
          "@variables": {
            ".test": {
              "var-1": "inside is overridden"
            }
          }
        }
      },
      "@variables": {
        ".test": {
          "var-1": "inside"
        }
      }
    },
    "@variables": {
      ".test": {
        "var-1": "outside"
      }
    }
  },
  {
    "@template": "<span{{ {'class': 'foo'} }}>{{ test }}<em>{{ some }}</em>?</span>",
    "test": "My test",
    "some": "is working"
  },
  {
    "@template": "<span{{ attr }}><span{{ foo }}>{{ test }}</span></span>",
    "test": "My test",
    "attr": {
      "class": [
        "foo",
        "bar"
      ],
      "style": {
        "--var-1:": "#222;",
        "--var-2:": "#333;"
      },
      "data-array": [
        "arr1",
        "arr2"
      ],
      "data-obj": {
        "k1": "v1",
        "k2": "v2"
      },
      "data-str": "lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    },
    "foo": {
      "data": [
        "foo",
        "bar"
      ]
    }
  },
  {
    "# Test nested var access and safe filter": "",
    "@template": "{{ test }} {{ nested.foo }} {{ nested_more[0].foo }}? {{ safe|safe }}",
    "test": "My test",
    "nested": {
      "foo": "is working"
    },
    "nested_more": [
      {
        "foo": "well"
      }
    ],
    "safe": "<b>is it?</b>"
  },
  {
    "# Test a common ui_suite variant set": "",
    "@template": "{% set test = {}|add_class('test-' ~ variant|lower|replace('_', '-')) %}{{ test }}",
    "variant": "sOmE__VaRiANT_EXpAND-ok"
  },
  {
    "# Test a common ui_suite multiple variants set": "",
    "@template": "{% set variants = variant|split('__')|map('lower')|map('prepend', 'test-')|map('replace', '_', '-') %}{% set test = {}|add_class(variants) %}{{ test }}",
    "variant": "VaRiANTS__mUltIPLE___SOmE____OTher_____fiNAL"
  },
  {
    "@component": "test_t",
    "@trans": {
      "Var": "Variable",
      "Hello": "Bonjour",
      "Hello @name!": "Bonjour @name!",
      "Your number is @num": "Votre nombre est @num",
      "Hello @name where is @other_name?": "Bonjour @name où est @other_name?"
    }
  },
  {
    "@template": "{{ 'Hi'|t }}\n{{ 'Hi @name!'|t({'@name': 'John'}) }}",
    "@trans": {
      "Hi": "Bonjour",
      "Hi @name!": "Bonjour @name!"
    }
  },
  {
    "@component": "test_filters"
  },
  "# filter add_class() on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "class": "foo",
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "class": "foo",
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter add_class() on renderable @element",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "class": "foo",
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "class": [
        "foo",
        "bar"
      ],
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": [
      {
        "@element": "p",
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    ]
  },
  "# filter set_attribute() on renderable @element",
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@element": "p"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@element": "p",
      "data": "foo"
    }
  },
  "# filter set_attribute() on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@component": "attributes",
      "text": " - no attributes"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter chained on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable_chained": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter on undefined renderable",
  {
    "@component": "test_filters_renderable",
    "test_undefined": true
  },
  "# filter on renderable @template",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@template": "<span class=\"foo\">{{ test }}</span>",
      "test": "foo"
    }
  },
  {
    "@variables": {
      ".test": {
        "var-1": "overridden",
        "var-1-do-not-exist": "do-not-exist"
      }
    }
  },
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": "foo",
      "@variables": {
        ".test": {
          "var-1": "orange"
        }
      }
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": "true"
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": "true"
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@attached": [
      {
        "@element": "link",
        "href": "?page=2",
        "rel": "next"
      },
      {
        "@element": "base",
        "target": "_blank"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@element": "empty"
  },
  {
    "@element": "span",
    "@content": "foo",
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-1"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-2"
      }
    ]
  },
  {
    "@element": "span",
    "@content": {
      "@element": "em",
      "@content": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@element": "em",
    "@content": {
      "@element": "span",
      "@content": "bar",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-2"
      }
    }
  },
  {
    "@element": "em",
    "@content": [
      "foo",
      {
        "@element": "span",
        "@content": "bar",
        "@attached": {
          "@element": "meta",
          "name": "NESTED-3"
        }
      }
    ],
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-3"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-4"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@library": {
      "dependencies": [
        "test/test.dependency"
      ]
    }
  },
  {
    "@attached": [
      {
        "@element": "link",
        "href": "?page=2",
        "rel": "next"
      },
      {
        "@element": "base",
        "target": "_blank"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@element": "empty",
    "@library": {
      "dependencies": [
        "test/test.dependency-payload"
      ]
    }
  },
  {
    "@element": "span",
    "@content": "foo",
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-1"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-2"
      }
    ]
  },
  {
    "@element": "span",
    "@content": {
      "@element": "em",
      "@content": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@element": "em",
    "@content": {
      "@element": "span",
      "@content": "bar",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-2"
      }
    }
  },
  {
    "@element": "em",
    "@content": [
      "foo",
      {
        "@element": "span",
        "@content": "bar",
        "@attached": {
          "@element": "meta",
          "name": "NESTED-3"
        }
      }
    ],
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-3"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-4"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": true
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": true
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": true
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": true
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": "foo",
      "@variables": {
        ".sidebar": {
          "var-1": "SUB-SUB-SIDEBAR"
        }
      }
    }
  },
  {
    "@component": "other",
    "label": "foo",
    "text": [
      " bar ",
      {
        "@component": "other",
        "label": "some",
        "attributes": {
          "data-some": "stuff"
        }
      }
    ],
    "attributes": {
      "data-foo": "bar",
      "class": [
        "from",
        "payload",
        "bar"
      ]
    }
  },
  {
    "@component": "other",
    "@variant": "variant",
    "text": "is variant"
  },
  {
    "@component": "other",
    "@variant": "invalid-variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "variant": "variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "variant": "invalid-variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "@variant": "variant",
    "variant": "variant2",
    "text": "is variant"
  },
  {
    "@component": "other",
    "@variant": "variant2",
    "variant": "variant",
    "text": "is variant2"
  },
  [
    {
      "@component": "test",
      "label": "<span>Escape me!</span>"
    },
    {
      "@component": "test",
      "label": "foo",
      "text": [
        " bar ",
        {
          "@component": "test",
          "label": "some",
          "attributes": {
            "data-some": "stuff"
          }
        }
      ],
      "attributes": {
        "data-foo": "bar",
        "class": [
          "from",
          "payload",
          "bar"
        ]
      }
    }
  ],
  {
    "@component": "test",
    "label": "dark attribute",
    "@theme": "dark"
  },
  {
    "@component": "test",
    "label": "dark class",
    "@theme": "dark-class"
  },
  {
    "@component": "test",
    "label": "theme not in config",
    "@theme": "unknown"
  },
  {
    "@component": "test",
    "label": "empty theme",
    "@theme": ""
  },
  {
    "@component": "test",
    "label": "invalid array theme",
    "@theme": [
      "dark"
    ]
  },
  {
    "@component": "test",
    "label": "invalid obj theme",
    "@theme": {
      "dark": "dark"
    }
  },
  {
    "@component": "test",
    "label": "no",
    "text": "attributes"
  },
  {
    "@component": "test",
    "label": "with",
    "text": "@attributes",
    "@attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "attributes",
    "attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "@attributes and attributes",
    "@attributes": {
      "foo": "bar"
    },
    "attributes": {
      "foo": "overridden"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "attributes and @attributes",
    "attributes": {
      "foo": "overridden"
    },
    "@attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "mixed types @attributes",
    "@attributes": {
      "class": [
        "foo",
        "bar"
      ],
      "style": {
        "--var-1:": "#222;",
        "--var-2:": "#333;"
      },
      "data-array": [
        "arr1",
        "arr2"
      ],
      "data-obj": {
        "k1": "v1",
        "k2": "v2"
      },
      "data-str": "lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "child attributes as label_attributes",
    "label_attributes": {
      "class": [
        "label_foo",
        "label_bar"
      ],
      "style": {
        "--var-1:": "#label_222;",
        "--var-2:": "#label_333;"
      },
      "data-array": [
        "label_arr1",
        "label_arr2"
      ],
      "data-obj": {
        "label_k1": "label_v1",
        "label_k2": "label_v2"
      },
      "data-str": "label_lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    }
  },
  {
    "@attached": [
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@component": "other",
    "label": [
      [
        "bar"
      ],
      {
        "@component": "other",
        "@variant": "variant",
        "label": "bar",
        "@attached": [
          {
            "@element": "meta",
            "name": "component-field-1"
          },
          {
            "@element": "meta",
            "name": "component-field-2"
          }
        ]
      }
    ]
  },
  {
    "@component": "test",
    "label": {
      "@component": "test",
      "label": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@component": "test",
    "label": "some",
    "@attached": [
      {
        "@element": "meta",
        "name": "component-1"
      },
      {
        "@element": "meta",
        "name": "component-2"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@component": "test_with_library",
    "@library": {
      "css": {
        "payload.css": {
          "media": "screen"
        }
      },
      "js": {
        "payload.js": {
          "async": true
        }
      }
    }
  },
  {
    "@component": "test",
    "label": "foo",
    "text": [
      [
        "then",
        {
          "@component": "other",
          "label": "bar",
          "@library": {
            "css": {
              "inside-array.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside-array.js": {
                "async": true
              }
            }
          }
        }
      ],
      {
        "@component": "test",
        "label": "bar"
      },
      {
        "@component": "test",
        "label": "stuff"
      },
      {
        "@library": {
          "css": {
            "inside.css": {
              "media": "screen"
            }
          },
          "js": {
            "inside.js": {
              "async": true
            }
          }
        }
      }
    ],
    "@library": {
      "css": {
        "foo.css": {
          "media": "screen"
        }
      },
      "js": {
        "foo.js": {
          "async": true
        }
      }
    }
  },
  {
    "@component": "test",
    "label": "LABEL",
    "text": [
      " MY ",
      {
        "@component": "test",
        "label": "some",
        "attributes": {
          "data-some": "stuff"
        },
        "@local_variables": {
          "var-1": "#222222"
        },
        "@variables": {
          ":root": {
            "var-2": "SUB-SUB-ROOT"
          }
        }
      }
    ]
  },
  {
    "@component": "test_attribute"
  },
  {
    "@element": "span",
    "@content": "foo",
    "@local_variables": {
      "var-1": "#222222",
      "var-2": "#333333",
      "var-3": "#444444",
      "var-3-will-be-ignored": "because default",
      "ignored": "no-value"
    }
  },
  {
    "@element": "code",
    "@content": "<span>Escape me!</span>"
  },
  {
    "@element": "code",
    "@content": "<span>Escape url: http://some.com !</span>"
  },
  {
    "@element": "div",
    "id": "intro",
    "class": [
      "title",
      "xl"
    ],
    "@content": [
      "Content as ",
      {
        "@element": "a",
        "href": "http://foo.org",
        "data-href": "href",
        "@content": [
          {
            "@element": "span",
            "@content": {
              "@element": "strong",
              "@content": "foo ",
              "data-bar": "bar"
            }
          },
          {
            "@element": "span",
            "@content": "bar ",
            "data-foo": "foo"
          },
          "&& "
        ]
      },
      "with ",
      "like ",
      {
        "@element": "p",
        "class": "bold",
        "@content": {
          "@element": "span",
          "data-strong": "strong",
          "@content": [
            "inside ",
            {
              "@element": "em",
              "@content": "and more",
              "data-em": "em"
            }
          ]
        }
      },
      true,
      42,
      42.42424242,
      -42,
      -42.42424242
    ]
  },
  {
    "@element": "span",
    "@content": "Test attributes types",
    "class": [
      "foo",
      "bar"
    ],
    "style": "border: 1px;",
    "data": "test",
    "data-array": [
      "arr1",
      "arr2"
    ],
    "data-obj": {
      "k1": "v1",
      "k2": "v2"
    },
    "data-str": "lorem",
    "data-bool": true,
    "data-num": 45,
    "data-num-neg": -45,
    "data-float": 45.33,
    "data-float-neg": -45.33
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo",
    "@theme": "dark"
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo",
    "@theme": "dark-class"
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo"
  },
  {
    "@element": "p",
    "class": [
      "class-1",
      "class-2",
      "class-3"
    ],
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "data-foo": "bar",
    "@content": "foo"
  },
  {
    "@element": "elem-1"
  },
  {
    "@element": "elem-2",
    "@content": "foo1"
  },
  {
    "@element": "elem-3",
    "@content": {
      "@element": "elem-4",
      "@content": "foo2"
    }
  },
  {
    "@element": "elem-5",
    "@content": [
      {
        "@element": "elem-6",
        "@content": "foo3"
      },
      {
        "@element": "elem-7",
        "@content": "foo4"
      }
    ]
  },
  {
    "@element": "elem-8",
    "@content": {
      "@element": "elem-9",
      "@content": {
        "@element": "elem-10",
        "@content": {
          "@element": "elem-11",
          "@content": {
            "@element": "elem-12",
            "@content": "foo5"
          }
        }
      }
    }
  },
  {
    "@element": "elem-13",
    "@content": [
      {
        "@element": "elem-14",
        "@content": [
          {
            "@element": "elem-15",
            "@content": [
              {
                "@element": "elem-16",
                "@content": [
                  {
                    "@element": "elem-17",
                    "@content": "foo6"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "@element": "elem-18",
        "@content": [
          {
            "@element": "elem-19",
            "@content": [
              {
                "@element": "elem-20",
                "@content": [
                  {
                    "@element": "elem-21",
                    "@content": "foo7"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "@variables": {
      ".test": {
        "var-1": "overridden",
        "var-1-do-not-exist": "do-not-exist"
      }
    }
  },
  [
    {
      "@variables": {
        ".test": {
          "var-1": "overridden again"
        }
      }
    }
  ],
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": {
        "@element": "div",
        "@content": {
          "@element": "span",
          "@content": "foo",
          "@variables": {
            ".test": {
              "var-1": "inside is overridden"
            }
          }
        }
      },
      "@variables": {
        ".test": {
          "var-1": "inside"
        }
      }
    },
    "@variables": {
      ".test": {
        "var-1": "outside"
      }
    }
  },
  {
    "@template": "<span{{ {'class': 'foo'} }}>{{ test }}<em>{{ some }}</em>?</span>",
    "test": "My test",
    "some": "is working"
  },
  {
    "@template": "<span{{ attr }}><span{{ foo }}>{{ test }}</span></span>",
    "test": "My test",
    "attr": {
      "class": [
        "foo",
        "bar"
      ],
      "style": {
        "--var-1:": "#222;",
        "--var-2:": "#333;"
      },
      "data-array": [
        "arr1",
        "arr2"
      ],
      "data-obj": {
        "k1": "v1",
        "k2": "v2"
      },
      "data-str": "lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    },
    "foo": {
      "data": [
        "foo",
        "bar"
      ]
    }
  },
  {
    "# Test nested var access and safe filter": "",
    "@template": "{{ test }} {{ nested.foo }} {{ nested_more[0].foo }}? {{ safe|safe }}",
    "test": "My test",
    "nested": {
      "foo": "is working"
    },
    "nested_more": [
      {
        "foo": "well"
      }
    ],
    "safe": "<b>is it?</b>"
  },
  {
    "# Test a common ui_suite variant set": "",
    "@template": "{% set test = {}|add_class('test-' ~ variant|lower|replace('_', '-')) %}{{ test }}",
    "variant": "sOmE__VaRiANT_EXpAND-ok"
  },
  {
    "# Test a common ui_suite multiple variants set": "",
    "@template": "{% set variants = variant|split('__')|map('lower')|map('prepend', 'test-')|map('replace', '_', '-') %}{% set test = {}|add_class(variants) %}{{ test }}",
    "variant": "VaRiANTS__mUltIPLE___SOmE____OTher_____fiNAL"
  },
  {
    "@component": "test_t",
    "@trans": {
      "Var": "Variable",
      "Hello": "Bonjour",
      "Hello @name!": "Bonjour @name!",
      "Your number is @num": "Votre nombre est @num",
      "Hello @name where is @other_name?": "Bonjour @name où est @other_name?"
    }
  },
  {
    "@template": "{{ 'Hi'|t }}\n{{ 'Hi @name!'|t({'@name': 'John'}) }}",
    "@trans": {
      "Hi": "Bonjour",
      "Hi @name!": "Bonjour @name!"
    }
  },
  {
    "@component": "test_filters"
  },
  "# filter add_class() on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "class": "foo",
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "class": "foo",
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter add_class() on renderable @element",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "class": "foo",
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "class": [
        "foo",
        "bar"
      ],
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": [
      {
        "@element": "p",
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    ]
  },
  "# filter set_attribute() on renderable @element",
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@element": "p"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@element": "p",
      "data": "foo"
    }
  },
  "# filter set_attribute() on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@component": "attributes",
      "text": " - no attributes"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter chained on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable_chained": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter on undefined renderable",
  {
    "@component": "test_filters_renderable",
    "test_undefined": true
  },
  "# filter on renderable @template",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@template": "<span class=\"foo\">{{ test }}</span>",
      "test": "foo"
    }
  },
  {
    "@variables": {
      ".test": {
        "var-1": "overridden",
        "var-1-do-not-exist": "do-not-exist"
      }
    }
  },
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": "foo",
      "@variables": {
        ".test": {
          "var-1": "orange"
        }
      }
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": "true"
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": "true"
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@attached": [
      {
        "@element": "link",
        "href": "?page=2",
        "rel": "next"
      },
      {
        "@element": "base",
        "target": "_blank"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@element": "empty"
  },
  {
    "@element": "span",
    "@content": "foo",
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-1"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-2"
      }
    ]
  },
  {
    "@element": "span",
    "@content": {
      "@element": "em",
      "@content": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@element": "em",
    "@content": {
      "@element": "span",
      "@content": "bar",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-2"
      }
    }
  },
  {
    "@element": "em",
    "@content": [
      "foo",
      {
        "@element": "span",
        "@content": "bar",
        "@attached": {
          "@element": "meta",
          "name": "NESTED-3"
        }
      }
    ],
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-3"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-4"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@library": {
      "dependencies": [
        "test/test.dependency"
      ]
    }
  },
  {
    "@attached": [
      {
        "@element": "link",
        "href": "?page=2",
        "rel": "next"
      },
      {
        "@element": "base",
        "target": "_blank"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@element": "empty",
    "@library": {
      "dependencies": [
        "test/test.dependency-payload"
      ]
    }
  },
  {
    "@element": "span",
    "@content": "foo",
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-1"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-2"
      }
    ]
  },
  {
    "@element": "span",
    "@content": {
      "@element": "em",
      "@content": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@element": "em",
    "@content": {
      "@element": "span",
      "@content": "bar",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-2"
      }
    }
  },
  {
    "@element": "em",
    "@content": [
      "foo",
      {
        "@element": "span",
        "@content": "bar",
        "@attached": {
          "@element": "meta",
          "name": "NESTED-3"
        }
      }
    ],
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-3"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-4"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": true
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": true
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": true
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": true
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": "foo",
      "@variables": {
        ".sidebar": {
          "var-1": "SUB-SUB-SIDEBAR"
        }
      }
    }
  },
  {
    "@component": "other",
    "label": "foo",
    "text": [
      " bar ",
      {
        "@component": "other",
        "label": "some",
        "attributes": {
          "data-some": "stuff"
        }
      }
    ],
    "attributes": {
      "data-foo": "bar",
      "class": [
        "from",
        "payload",
        "bar"
      ]
    }
  },
  {
    "@component": "other",
    "@variant": "variant",
    "text": "is variant"
  },
  {
    "@component": "other",
    "@variant": "invalid-variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "variant": "variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "variant": "invalid-variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "@variant": "variant",
    "variant": "variant2",
    "text": "is variant"
  },
  {
    "@component": "other",
    "@variant": "variant2",
    "variant": "variant",
    "text": "is variant2"
  },
  [
    {
      "@component": "test",
      "label": "<span>Escape me!</span>"
    },
    {
      "@component": "test",
      "label": "foo",
      "text": [
        " bar ",
        {
          "@component": "test",
          "label": "some",
          "attributes": {
            "data-some": "stuff"
          }
        }
      ],
      "attributes": {
        "data-foo": "bar",
        "class": [
          "from",
          "payload",
          "bar"
        ]
      }
    }
  ],
  {
    "@component": "test",
    "label": "dark attribute",
    "@theme": "dark"
  },
  {
    "@component": "test",
    "label": "dark class",
    "@theme": "dark-class"
  },
  {
    "@component": "test",
    "label": "theme not in config",
    "@theme": "unknown"
  },
  {
    "@component": "test",
    "label": "empty theme",
    "@theme": ""
  },
  {
    "@component": "test",
    "label": "invalid array theme",
    "@theme": [
      "dark"
    ]
  },
  {
    "@component": "test",
    "label": "invalid obj theme",
    "@theme": {
      "dark": "dark"
    }
  },
  {
    "@component": "test",
    "label": "no",
    "text": "attributes"
  },
  {
    "@component": "test",
    "label": "with",
    "text": "@attributes",
    "@attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "attributes",
    "attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "@attributes and attributes",
    "@attributes": {
      "foo": "bar"
    },
    "attributes": {
      "foo": "overridden"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "attributes and @attributes",
    "attributes": {
      "foo": "overridden"
    },
    "@attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "mixed types @attributes",
    "@attributes": {
      "class": [
        "foo",
        "bar"
      ],
      "style": {
        "--var-1:": "#222;",
        "--var-2:": "#333;"
      },
      "data-array": [
        "arr1",
        "arr2"
      ],
      "data-obj": {
        "k1": "v1",
        "k2": "v2"
      },
      "data-str": "lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "child attributes as label_attributes",
    "label_attributes": {
      "class": [
        "label_foo",
        "label_bar"
      ],
      "style": {
        "--var-1:": "#label_222;",
        "--var-2:": "#label_333;"
      },
      "data-array": [
        "label_arr1",
        "label_arr2"
      ],
      "data-obj": {
        "label_k1": "label_v1",
        "label_k2": "label_v2"
      },
      "data-str": "label_lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    }
  },
  {
    "@attached": [
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@component": "other",
    "label": [
      [
        "bar"
      ],
      {
        "@component": "other",
        "@variant": "variant",
        "label": "bar",
        "@attached": [
          {
            "@element": "meta",
            "name": "component-field-1"
          },
          {
            "@element": "meta",
            "name": "component-field-2"
          }
        ]
      }
    ]
  },
  {
    "@component": "test",
    "label": {
      "@component": "test",
      "label": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@component": "test",
    "label": "some",
    "@attached": [
      {
        "@element": "meta",
        "name": "component-1"
      },
      {
        "@element": "meta",
        "name": "component-2"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@component": "test_with_library",
    "@library": {
      "css": {
        "payload.css": {
          "media": "screen"
        }
      },
      "js": {
        "payload.js": {
          "async": true
        }
      }
    }
  },
  {
    "@component": "test",
    "label": "foo",
    "text": [
      [
        "then",
        {
          "@component": "other",
          "label": "bar",
          "@library": {
            "css": {
              "inside-array.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside-array.js": {
                "async": true
              }
            }
          }
        }
      ],
      {
        "@component": "test",
        "label": "bar"
      },
      {
        "@component": "test",
        "label": "stuff"
      },
      {
        "@library": {
          "css": {
            "inside.css": {
              "media": "screen"
            }
          },
          "js": {
            "inside.js": {
              "async": true
            }
          }
        }
      }
    ],
    "@library": {
      "css": {
        "foo.css": {
          "media": "screen"
        }
      },
      "js": {
        "foo.js": {
          "async": true
        }
      }
    }
  },
  {
    "@component": "test",
    "label": "LABEL",
    "text": [
      " MY ",
      {
        "@component": "test",
        "label": "some",
        "attributes": {
          "data-some": "stuff"
        },
        "@local_variables": {
          "var-1": "#222222"
        },
        "@variables": {
          ":root": {
            "var-2": "SUB-SUB-ROOT"
          }
        }
      }
    ]
  },
  {
    "@component": "test_attribute"
  },
  {
    "@element": "span",
    "@content": "foo",
    "@local_variables": {
      "var-1": "#222222",
      "var-2": "#333333",
      "var-3": "#444444",
      "var-3-will-be-ignored": "because default",
      "ignored": "no-value"
    }
  },
  {
    "@element": "code",
    "@content": "<span>Escape me!</span>"
  },
  {
    "@element": "code",
    "@content": "<span>Escape url: http://some.com !</span>"
  },
  {
    "@element": "div",
    "id": "intro",
    "class": [
      "title",
      "xl"
    ],
    "@content": [
      "Content as ",
      {
        "@element": "a",
        "href": "http://foo.org",
        "data-href": "href",
        "@content": [
          {
            "@element": "span",
            "@content": {
              "@element": "strong",
              "@content": "foo ",
              "data-bar": "bar"
            }
          },
          {
            "@element": "span",
            "@content": "bar ",
            "data-foo": "foo"
          },
          "&& "
        ]
      },
      "with ",
      "like ",
      {
        "@element": "p",
        "class": "bold",
        "@content": {
          "@element": "span",
          "data-strong": "strong",
          "@content": [
            "inside ",
            {
              "@element": "em",
              "@content": "and more",
              "data-em": "em"
            }
          ]
        }
      },
      true,
      42,
      42.42424242,
      -42,
      -42.42424242
    ]
  },
  {
    "@element": "span",
    "@content": "Test attributes types",
    "class": [
      "foo",
      "bar"
    ],
    "style": "border: 1px;",
    "data": "test",
    "data-array": [
      "arr1",
      "arr2"
    ],
    "data-obj": {
      "k1": "v1",
      "k2": "v2"
    },
    "data-str": "lorem",
    "data-bool": true,
    "data-num": 45,
    "data-num-neg": -45,
    "data-float": 45.33,
    "data-float-neg": -45.33
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo",
    "@theme": "dark"
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo",
    "@theme": "dark-class"
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo"
  },
  {
    "@element": "p",
    "class": [
      "class-1",
      "class-2",
      "class-3"
    ],
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "data-foo": "bar",
    "@content": "foo"
  },
  {
    "@element": "elem-1"
  },
  {
    "@element": "elem-2",
    "@content": "foo1"
  },
  {
    "@element": "elem-3",
    "@content": {
      "@element": "elem-4",
      "@content": "foo2"
    }
  },
  {
    "@element": "elem-5",
    "@content": [
      {
        "@element": "elem-6",
        "@content": "foo3"
      },
      {
        "@element": "elem-7",
        "@content": "foo4"
      }
    ]
  },
  {
    "@element": "elem-8",
    "@content": {
      "@element": "elem-9",
      "@content": {
        "@element": "elem-10",
        "@content": {
          "@element": "elem-11",
          "@content": {
            "@element": "elem-12",
            "@content": "foo5"
          }
        }
      }
    }
  },
  {
    "@element": "elem-13",
    "@content": [
      {
        "@element": "elem-14",
        "@content": [
          {
            "@element": "elem-15",
            "@content": [
              {
                "@element": "elem-16",
                "@content": [
                  {
                    "@element": "elem-17",
                    "@content": "foo6"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "@element": "elem-18",
        "@content": [
          {
            "@element": "elem-19",
            "@content": [
              {
                "@element": "elem-20",
                "@content": [
                  {
                    "@element": "elem-21",
                    "@content": "foo7"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "@variables": {
      ".test": {
        "var-1": "overridden",
        "var-1-do-not-exist": "do-not-exist"
      }
    }
  },
  [
    {
      "@variables": {
        ".test": {
          "var-1": "overridden again"
        }
      }
    }
  ],
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": {
        "@element": "div",
        "@content": {
          "@element": "span",
          "@content": "foo",
          "@variables": {
            ".test": {
              "var-1": "inside is overridden"
            }
          }
        }
      },
      "@variables": {
        ".test": {
          "var-1": "inside"
        }
      }
    },
    "@variables": {
      ".test": {
        "var-1": "outside"
      }
    }
  },
  {
    "@template": "<span{{ {'class': 'foo'} }}>{{ test }}<em>{{ some }}</em>?</span>",
    "test": "My test",
    "some": "is working"
  },
  {
    "@template": "<span{{ attr }}><span{{ foo }}>{{ test }}</span></span>",
    "test": "My test",
    "attr": {
      "class": [
        "foo",
        "bar"
      ],
      "style": {
        "--var-1:": "#222;",
        "--var-2:": "#333;"
      },
      "data-array": [
        "arr1",
        "arr2"
      ],
      "data-obj": {
        "k1": "v1",
        "k2": "v2"
      },
      "data-str": "lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    },
    "foo": {
      "data": [
        "foo",
        "bar"
      ]
    }
  },
  {
    "# Test nested var access and safe filter": "",
    "@template": "{{ test }} {{ nested.foo }} {{ nested_more[0].foo }}? {{ safe|safe }}",
    "test": "My test",
    "nested": {
      "foo": "is working"
    },
    "nested_more": [
      {
        "foo": "well"
      }
    ],
    "safe": "<b>is it?</b>"
  },
  {
    "# Test a common ui_suite variant set": "",
    "@template": "{% set test = {}|add_class('test-' ~ variant|lower|replace('_', '-')) %}{{ test }}",
    "variant": "sOmE__VaRiANT_EXpAND-ok"
  },
  {
    "# Test a common ui_suite multiple variants set": "",
    "@template": "{% set variants = variant|split('__')|map('lower')|map('prepend', 'test-')|map('replace', '_', '-') %}{% set test = {}|add_class(variants) %}{{ test }}",
    "variant": "VaRiANTS__mUltIPLE___SOmE____OTher_____fiNAL"
  },
  {
    "@component": "test_t",
    "@trans": {
      "Var": "Variable",
      "Hello": "Bonjour",
      "Hello @name!": "Bonjour @name!",
      "Your number is @num": "Votre nombre est @num",
      "Hello @name where is @other_name?": "Bonjour @name où est @other_name?"
    }
  },
  {
    "@template": "{{ 'Hi'|t }}\n{{ 'Hi @name!'|t({'@name': 'John'}) }}",
    "@trans": {
      "Hi": "Bonjour",
      "Hi @name!": "Bonjour @name!"
    }
  },
  {
    "@component": "test_filters"
  },
  "# filter add_class() on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "class": "foo",
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "class": "foo",
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter add_class() on renderable @element",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "class": "foo",
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "class": [
        "foo",
        "bar"
      ],
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": [
      {
        "@element": "p",
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    ]
  },
  "# filter set_attribute() on renderable @element",
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@element": "p"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@element": "p",
      "data": "foo"
    }
  },
  "# filter set_attribute() on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@component": "attributes",
      "text": " - no attributes"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter chained on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable_chained": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter on undefined renderable",
  {
    "@component": "test_filters_renderable",
    "test_undefined": true
  },
  "# filter on renderable @template",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@template": "<span class=\"foo\">{{ test }}</span>",
      "test": "foo"
    }
  },
  {
    "@variables": {
      ".test": {
        "var-1": "overridden",
        "var-1-do-not-exist": "do-not-exist"
      }
    }
  },
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": "foo",
      "@variables": {
        ".test": {
          "var-1": "orange"
        }
      }
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": "true"
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": "true"
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@attached": [
      {
        "@element": "link",
        "href": "?page=2",
        "rel": "next"
      },
      {
        "@element": "base",
        "target": "_blank"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@element": "empty"
  },
  {
    "@element": "span",
    "@content": "foo",
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-1"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-2"
      }
    ]
  },
  {
    "@element": "span",
    "@content": {
      "@element": "em",
      "@content": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@element": "em",
    "@content": {
      "@element": "span",
      "@content": "bar",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-2"
      }
    }
  },
  {
    "@element": "em",
    "@content": [
      "foo",
      {
        "@element": "span",
        "@content": "bar",
        "@attached": {
          "@element": "meta",
          "name": "NESTED-3"
        }
      }
    ],
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-3"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-4"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@library": {
      "dependencies": [
        "test/test.dependency"
      ]
    }
  },
  {
    "@attached": [
      {
        "@element": "link",
        "href": "?page=2",
        "rel": "next"
      },
      {
        "@element": "base",
        "target": "_blank"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@element": "empty",
    "@library": {
      "dependencies": [
        "test/test.dependency-payload"
      ]
    }
  },
  {
    "@element": "span",
    "@content": "foo",
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-1"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-2"
      }
    ]
  },
  {
    "@element": "span",
    "@content": {
      "@element": "em",
      "@content": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@element": "em",
    "@content": {
      "@element": "span",
      "@content": "bar",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-2"
      }
    }
  },
  {
    "@element": "em",
    "@content": [
      "foo",
      {
        "@element": "span",
        "@content": "bar",
        "@attached": {
          "@element": "meta",
          "name": "NESTED-3"
        }
      }
    ],
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-3"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-4"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": true
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": true
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": true
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": true
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": "foo",
      "@variables": {
        ".sidebar": {
          "var-1": "SUB-SUB-SIDEBAR"
        }
      }
    }
  },
  {
    "@component": "other",
    "label": "foo",
    "text": [
      " bar ",
      {
        "@component": "other",
        "label": "some",
        "attributes": {
          "data-some": "stuff"
        }
      }
    ],
    "attributes": {
      "data-foo": "bar",
      "class": [
        "from",
        "payload",
        "bar"
      ]
    }
  },
  {
    "@component": "other",
    "@variant": "variant",
    "text": "is variant"
  },
  {
    "@component": "other",
    "@variant": "invalid-variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "variant": "variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "variant": "invalid-variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "@variant": "variant",
    "variant": "variant2",
    "text": "is variant"
  },
  {
    "@component": "other",
    "@variant": "variant2",
    "variant": "variant",
    "text": "is variant2"
  },
  [
    {
      "@component": "test",
      "label": "<span>Escape me!</span>"
    },
    {
      "@component": "test",
      "label": "foo",
      "text": [
        " bar ",
        {
          "@component": "test",
          "label": "some",
          "attributes": {
            "data-some": "stuff"
          }
        }
      ],
      "attributes": {
        "data-foo": "bar",
        "class": [
          "from",
          "payload",
          "bar"
        ]
      }
    }
  ],
  {
    "@component": "test",
    "label": "dark attribute",
    "@theme": "dark"
  },
  {
    "@component": "test",
    "label": "dark class",
    "@theme": "dark-class"
  },
  {
    "@component": "test",
    "label": "theme not in config",
    "@theme": "unknown"
  },
  {
    "@component": "test",
    "label": "empty theme",
    "@theme": ""
  },
  {
    "@component": "test",
    "label": "invalid array theme",
    "@theme": [
      "dark"
    ]
  },
  {
    "@component": "test",
    "label": "invalid obj theme",
    "@theme": {
      "dark": "dark"
    }
  },
  {
    "@component": "test",
    "label": "no",
    "text": "attributes"
  },
  {
    "@component": "test",
    "label": "with",
    "text": "@attributes",
    "@attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "attributes",
    "attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "@attributes and attributes",
    "@attributes": {
      "foo": "bar"
    },
    "attributes": {
      "foo": "overridden"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "attributes and @attributes",
    "attributes": {
      "foo": "overridden"
    },
    "@attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "mixed types @attributes",
    "@attributes": {
      "class": [
        "foo",
        "bar"
      ],
      "style": {
        "--var-1:": "#222;",
        "--var-2:": "#333;"
      },
      "data-array": [
        "arr1",
        "arr2"
      ],
      "data-obj": {
        "k1": "v1",
        "k2": "v2"
      },
      "data-str": "lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "child attributes as label_attributes",
    "label_attributes": {
      "class": [
        "label_foo",
        "label_bar"
      ],
      "style": {
        "--var-1:": "#label_222;",
        "--var-2:": "#label_333;"
      },
      "data-array": [
        "label_arr1",
        "label_arr2"
      ],
      "data-obj": {
        "label_k1": "label_v1",
        "label_k2": "label_v2"
      },
      "data-str": "label_lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    }
  },
  {
    "@attached": [
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@component": "other",
    "label": [
      [
        "bar"
      ],
      {
        "@component": "other",
        "@variant": "variant",
        "label": "bar",
        "@attached": [
          {
            "@element": "meta",
            "name": "component-field-1"
          },
          {
            "@element": "meta",
            "name": "component-field-2"
          }
        ]
      }
    ]
  },
  {
    "@component": "test",
    "label": {
      "@component": "test",
      "label": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@component": "test",
    "label": "some",
    "@attached": [
      {
        "@element": "meta",
        "name": "component-1"
      },
      {
        "@element": "meta",
        "name": "component-2"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@component": "test_with_library",
    "@library": {
      "css": {
        "payload.css": {
          "media": "screen"
        }
      },
      "js": {
        "payload.js": {
          "async": true
        }
      }
    }
  },
  {
    "@component": "test",
    "label": "foo",
    "text": [
      [
        "then",
        {
          "@component": "other",
          "label": "bar",
          "@library": {
            "css": {
              "inside-array.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside-array.js": {
                "async": true
              }
            }
          }
        }
      ],
      {
        "@component": "test",
        "label": "bar"
      },
      {
        "@component": "test",
        "label": "stuff"
      },
      {
        "@library": {
          "css": {
            "inside.css": {
              "media": "screen"
            }
          },
          "js": {
            "inside.js": {
              "async": true
            }
          }
        }
      }
    ],
    "@library": {
      "css": {
        "foo.css": {
          "media": "screen"
        }
      },
      "js": {
        "foo.js": {
          "async": true
        }
      }
    }
  },
  {
    "@component": "test",
    "label": "LABEL",
    "text": [
      " MY ",
      {
        "@component": "test",
        "label": "some",
        "attributes": {
          "data-some": "stuff"
        },
        "@local_variables": {
          "var-1": "#222222"
        },
        "@variables": {
          ":root": {
            "var-2": "SUB-SUB-ROOT"
          }
        }
      }
    ]
  },
  {
    "@component": "test_attribute"
  },
  {
    "@element": "span",
    "@content": "foo",
    "@local_variables": {
      "var-1": "#222222",
      "var-2": "#333333",
      "var-3": "#444444",
      "var-3-will-be-ignored": "because default",
      "ignored": "no-value"
    }
  },
  {
    "@element": "code",
    "@content": "<span>Escape me!</span>"
  },
  {
    "@element": "code",
    "@content": "<span>Escape url: http://some.com !</span>"
  },
  {
    "@element": "div",
    "id": "intro",
    "class": [
      "title",
      "xl"
    ],
    "@content": [
      "Content as ",
      {
        "@element": "a",
        "href": "http://foo.org",
        "data-href": "href",
        "@content": [
          {
            "@element": "span",
            "@content": {
              "@element": "strong",
              "@content": "foo ",
              "data-bar": "bar"
            }
          },
          {
            "@element": "span",
            "@content": "bar ",
            "data-foo": "foo"
          },
          "&& "
        ]
      },
      "with ",
      "like ",
      {
        "@element": "p",
        "class": "bold",
        "@content": {
          "@element": "span",
          "data-strong": "strong",
          "@content": [
            "inside ",
            {
              "@element": "em",
              "@content": "and more",
              "data-em": "em"
            }
          ]
        }
      },
      true,
      42,
      42.42424242,
      -42,
      -42.42424242
    ]
  },
  {
    "@element": "span",
    "@content": "Test attributes types",
    "class": [
      "foo",
      "bar"
    ],
    "style": "border: 1px;",
    "data": "test",
    "data-array": [
      "arr1",
      "arr2"
    ],
    "data-obj": {
      "k1": "v1",
      "k2": "v2"
    },
    "data-str": "lorem",
    "data-bool": true,
    "data-num": 45,
    "data-num-neg": -45,
    "data-float": 45.33,
    "data-float-neg": -45.33
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo",
    "@theme": "dark"
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo",
    "@theme": "dark-class"
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo"
  },
  {
    "@element": "p",
    "class": [
      "class-1",
      "class-2",
      "class-3"
    ],
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "data-foo": "bar",
    "@content": "foo"
  },
  {
    "@element": "elem-1"
  },
  {
    "@element": "elem-2",
    "@content": "foo1"
  },
  {
    "@element": "elem-3",
    "@content": {
      "@element": "elem-4",
      "@content": "foo2"
    }
  },
  {
    "@element": "elem-5",
    "@content": [
      {
        "@element": "elem-6",
        "@content": "foo3"
      },
      {
        "@element": "elem-7",
        "@content": "foo4"
      }
    ]
  },
  {
    "@element": "elem-8",
    "@content": {
      "@element": "elem-9",
      "@content": {
        "@element": "elem-10",
        "@content": {
          "@element": "elem-11",
          "@content": {
            "@element": "elem-12",
            "@content": "foo5"
          }
        }
      }
    }
  },
  {
    "@element": "elem-13",
    "@content": [
      {
        "@element": "elem-14",
        "@content": [
          {
            "@element": "elem-15",
            "@content": [
              {
                "@element": "elem-16",
                "@content": [
                  {
                    "@element": "elem-17",
                    "@content": "foo6"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "@element": "elem-18",
        "@content": [
          {
            "@element": "elem-19",
            "@content": [
              {
                "@element": "elem-20",
                "@content": [
                  {
                    "@element": "elem-21",
                    "@content": "foo7"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "@variables": {
      ".test": {
        "var-1": "overridden",
        "var-1-do-not-exist": "do-not-exist"
      }
    }
  },
  [
    {
      "@variables": {
        ".test": {
          "var-1": "overridden again"
        }
      }
    }
  ],
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": {
        "@element": "div",
        "@content": {
          "@element": "span",
          "@content": "foo",
          "@variables": {
            ".test": {
              "var-1": "inside is overridden"
            }
          }
        }
      },
      "@variables": {
        ".test": {
          "var-1": "inside"
        }
      }
    },
    "@variables": {
      ".test": {
        "var-1": "outside"
      }
    }
  },
  {
    "@template": "<span{{ {'class': 'foo'} }}>{{ test }}<em>{{ some }}</em>?</span>",
    "test": "My test",
    "some": "is working"
  },
  {
    "@template": "<span{{ attr }}><span{{ foo }}>{{ test }}</span></span>",
    "test": "My test",
    "attr": {
      "class": [
        "foo",
        "bar"
      ],
      "style": {
        "--var-1:": "#222;",
        "--var-2:": "#333;"
      },
      "data-array": [
        "arr1",
        "arr2"
      ],
      "data-obj": {
        "k1": "v1",
        "k2": "v2"
      },
      "data-str": "lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    },
    "foo": {
      "data": [
        "foo",
        "bar"
      ]
    }
  },
  {
    "# Test nested var access and safe filter": "",
    "@template": "{{ test }} {{ nested.foo }} {{ nested_more[0].foo }}? {{ safe|safe }}",
    "test": "My test",
    "nested": {
      "foo": "is working"
    },
    "nested_more": [
      {
        "foo": "well"
      }
    ],
    "safe": "<b>is it?</b>"
  },
  {
    "# Test a common ui_suite variant set": "",
    "@template": "{% set test = {}|add_class('test-' ~ variant|lower|replace('_', '-')) %}{{ test }}",
    "variant": "sOmE__VaRiANT_EXpAND-ok"
  },
  {
    "# Test a common ui_suite multiple variants set": "",
    "@template": "{% set variants = variant|split('__')|map('lower')|map('prepend', 'test-')|map('replace', '_', '-') %}{% set test = {}|add_class(variants) %}{{ test }}",
    "variant": "VaRiANTS__mUltIPLE___SOmE____OTher_____fiNAL"
  },
  {
    "@component": "test_t",
    "@trans": {
      "Var": "Variable",
      "Hello": "Bonjour",
      "Hello @name!": "Bonjour @name!",
      "Your number is @num": "Votre nombre est @num",
      "Hello @name where is @other_name?": "Bonjour @name où est @other_name?"
    }
  },
  {
    "@template": "{{ 'Hi'|t }}\n{{ 'Hi @name!'|t({'@name': 'John'}) }}",
    "@trans": {
      "Hi": "Bonjour",
      "Hi @name!": "Bonjour @name!"
    }
  },
  {
    "@component": "test_filters"
  },
  "# filter add_class() on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "class": "foo",
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "class": "foo",
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter add_class() on renderable @element",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "class": "foo",
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "class": [
        "foo",
        "bar"
      ],
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": [
      {
        "@element": "p",
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    ]
  },
  "# filter set_attribute() on renderable @element",
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@element": "p"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@element": "p",
      "data": "foo"
    }
  },
  "# filter set_attribute() on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@component": "attributes",
      "text": " - no attributes"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter chained on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable_chained": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter on undefined renderable",
  {
    "@component": "test_filters_renderable",
    "test_undefined": true
  },
  "# filter on renderable @template",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@template": "<span class=\"foo\">{{ test }}</span>",
      "test": "foo"
    }
  },
  {
    "@variables": {
      ".test": {
        "var-1": "overridden",
        "var-1-do-not-exist": "do-not-exist"
      }
    }
  },
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": "foo",
      "@variables": {
        ".test": {
          "var-1": "orange"
        }
      }
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": "true"
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": "true"
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@attached": [
      {
        "@element": "link",
        "href": "?page=2",
        "rel": "next"
      },
      {
        "@element": "base",
        "target": "_blank"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@element": "empty"
  },
  {
    "@element": "span",
    "@content": "foo",
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-1"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-2"
      }
    ]
  },
  {
    "@element": "span",
    "@content": {
      "@element": "em",
      "@content": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@element": "em",
    "@content": {
      "@element": "span",
      "@content": "bar",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-2"
      }
    }
  },
  {
    "@element": "em",
    "@content": [
      "foo",
      {
        "@element": "span",
        "@content": "bar",
        "@attached": {
          "@element": "meta",
          "name": "NESTED-3"
        }
      }
    ],
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-3"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-4"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@library": {
      "dependencies": [
        "test/test.dependency"
      ]
    }
  },
  {
    "@attached": [
      {
        "@element": "link",
        "href": "?page=2",
        "rel": "next"
      },
      {
        "@element": "base",
        "target": "_blank"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@element": "empty",
    "@library": {
      "dependencies": [
        "test/test.dependency-payload"
      ]
    }
  },
  {
    "@element": "span",
    "@content": "foo",
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-1"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-2"
      }
    ]
  },
  {
    "@element": "span",
    "@content": {
      "@element": "em",
      "@content": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@element": "em",
    "@content": {
      "@element": "span",
      "@content": "bar",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-2"
      }
    }
  },
  {
    "@element": "em",
    "@content": [
      "foo",
      {
        "@element": "span",
        "@content": "bar",
        "@attached": {
          "@element": "meta",
          "name": "NESTED-3"
        }
      }
    ],
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-3"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-4"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": true
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": true
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": true
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": true
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": "foo",
      "@variables": {
        ".sidebar": {
          "var-1": "SUB-SUB-SIDEBAR"
        }
      }
    }
  },
  {
    "@component": "other",
    "label": "foo",
    "text": [
      " bar ",
      {
        "@component": "other",
        "label": "some",
        "attributes": {
          "data-some": "stuff"
        }
      }
    ],
    "attributes": {
      "data-foo": "bar",
      "class": [
        "from",
        "payload",
        "bar"
      ]
    }
  },
  {
    "@component": "other",
    "@variant": "variant",
    "text": "is variant"
  },
  {
    "@component": "other",
    "@variant": "invalid-variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "variant": "variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "variant": "invalid-variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "@variant": "variant",
    "variant": "variant2",
    "text": "is variant"
  },
  {
    "@component": "other",
    "@variant": "variant2",
    "variant": "variant",
    "text": "is variant2"
  },
  [
    {
      "@component": "test",
      "label": "<span>Escape me!</span>"
    },
    {
      "@component": "test",
      "label": "foo",
      "text": [
        " bar ",
        {
          "@component": "test",
          "label": "some",
          "attributes": {
            "data-some": "stuff"
          }
        }
      ],
      "attributes": {
        "data-foo": "bar",
        "class": [
          "from",
          "payload",
          "bar"
        ]
      }
    }
  ],
  {
    "@component": "test",
    "label": "dark attribute",
    "@theme": "dark"
  },
  {
    "@component": "test",
    "label": "dark class",
    "@theme": "dark-class"
  },
  {
    "@component": "test",
    "label": "theme not in config",
    "@theme": "unknown"
  },
  {
    "@component": "test",
    "label": "empty theme",
    "@theme": ""
  },
  {
    "@component": "test",
    "label": "invalid array theme",
    "@theme": [
      "dark"
    ]
  },
  {
    "@component": "test",
    "label": "invalid obj theme",
    "@theme": {
      "dark": "dark"
    }
  },
  {
    "@component": "test",
    "label": "no",
    "text": "attributes"
  },
  {
    "@component": "test",
    "label": "with",
    "text": "@attributes",
    "@attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "attributes",
    "attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "@attributes and attributes",
    "@attributes": {
      "foo": "bar"
    },
    "attributes": {
      "foo": "overridden"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "attributes and @attributes",
    "attributes": {
      "foo": "overridden"
    },
    "@attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "mixed types @attributes",
    "@attributes": {
      "class": [
        "foo",
        "bar"
      ],
      "style": {
        "--var-1:": "#222;",
        "--var-2:": "#333;"
      },
      "data-array": [
        "arr1",
        "arr2"
      ],
      "data-obj": {
        "k1": "v1",
        "k2": "v2"
      },
      "data-str": "lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "child attributes as label_attributes",
    "label_attributes": {
      "class": [
        "label_foo",
        "label_bar"
      ],
      "style": {
        "--var-1:": "#label_222;",
        "--var-2:": "#label_333;"
      },
      "data-array": [
        "label_arr1",
        "label_arr2"
      ],
      "data-obj": {
        "label_k1": "label_v1",
        "label_k2": "label_v2"
      },
      "data-str": "label_lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    }
  },
  {
    "@attached": [
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@component": "other",
    "label": [
      [
        "bar"
      ],
      {
        "@component": "other",
        "@variant": "variant",
        "label": "bar",
        "@attached": [
          {
            "@element": "meta",
            "name": "component-field-1"
          },
          {
            "@element": "meta",
            "name": "component-field-2"
          }
        ]
      }
    ]
  },
  {
    "@component": "test",
    "label": {
      "@component": "test",
      "label": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@component": "test",
    "label": "some",
    "@attached": [
      {
        "@element": "meta",
        "name": "component-1"
      },
      {
        "@element": "meta",
        "name": "component-2"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@component": "test_with_library",
    "@library": {
      "css": {
        "payload.css": {
          "media": "screen"
        }
      },
      "js": {
        "payload.js": {
          "async": true
        }
      }
    }
  },
  {
    "@component": "test",
    "label": "foo",
    "text": [
      [
        "then",
        {
          "@component": "other",
          "label": "bar",
          "@library": {
            "css": {
              "inside-array.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside-array.js": {
                "async": true
              }
            }
          }
        }
      ],
      {
        "@component": "test",
        "label": "bar"
      },
      {
        "@component": "test",
        "label": "stuff"
      },
      {
        "@library": {
          "css": {
            "inside.css": {
              "media": "screen"
            }
          },
          "js": {
            "inside.js": {
              "async": true
            }
          }
        }
      }
    ],
    "@library": {
      "css": {
        "foo.css": {
          "media": "screen"
        }
      },
      "js": {
        "foo.js": {
          "async": true
        }
      }
    }
  },
  {
    "@component": "test",
    "label": "LABEL",
    "text": [
      " MY ",
      {
        "@component": "test",
        "label": "some",
        "attributes": {
          "data-some": "stuff"
        },
        "@local_variables": {
          "var-1": "#222222"
        },
        "@variables": {
          ":root": {
            "var-2": "SUB-SUB-ROOT"
          }
        }
      }
    ]
  },
  {
    "@component": "test_attribute"
  },
  {
    "@element": "span",
    "@content": "foo",
    "@local_variables": {
      "var-1": "#222222",
      "var-2": "#333333",
      "var-3": "#444444",
      "var-3-will-be-ignored": "because default",
      "ignored": "no-value"
    }
  },
  {
    "@element": "code",
    "@content": "<span>Escape me!</span>"
  },
  {
    "@element": "code",
    "@content": "<span>Escape url: http://some.com !</span>"
  },
  {
    "@element": "div",
    "id": "intro",
    "class": [
      "title",
      "xl"
    ],
    "@content": [
      "Content as ",
      {
        "@element": "a",
        "href": "http://foo.org",
        "data-href": "href",
        "@content": [
          {
            "@element": "span",
            "@content": {
              "@element": "strong",
              "@content": "foo ",
              "data-bar": "bar"
            }
          },
          {
            "@element": "span",
            "@content": "bar ",
            "data-foo": "foo"
          },
          "&& "
        ]
      },
      "with ",
      "like ",
      {
        "@element": "p",
        "class": "bold",
        "@content": {
          "@element": "span",
          "data-strong": "strong",
          "@content": [
            "inside ",
            {
              "@element": "em",
              "@content": "and more",
              "data-em": "em"
            }
          ]
        }
      },
      true,
      42,
      42.42424242,
      -42,
      -42.42424242
    ]
  },
  {
    "@element": "span",
    "@content": "Test attributes types",
    "class": [
      "foo",
      "bar"
    ],
    "style": "border: 1px;",
    "data": "test",
    "data-array": [
      "arr1",
      "arr2"
    ],
    "data-obj": {
      "k1": "v1",
      "k2": "v2"
    },
    "data-str": "lorem",
    "data-bool": true,
    "data-num": 45,
    "data-num-neg": -45,
    "data-float": 45.33,
    "data-float-neg": -45.33
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo",
    "@theme": "dark"
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo",
    "@theme": "dark-class"
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo"
  },
  {
    "@element": "p",
    "class": [
      "class-1",
      "class-2",
      "class-3"
    ],
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "data-foo": "bar",
    "@content": "foo"
  },
  {
    "@element": "elem-1"
  },
  {
    "@element": "elem-2",
    "@content": "foo1"
  },
  {
    "@element": "elem-3",
    "@content": {
      "@element": "elem-4",
      "@content": "foo2"
    }
  },
  {
    "@element": "elem-5",
    "@content": [
      {
        "@element": "elem-6",
        "@content": "foo3"
      },
      {
        "@element": "elem-7",
        "@content": "foo4"
      }
    ]
  },
  {
    "@element": "elem-8",
    "@content": {
      "@element": "elem-9",
      "@content": {
        "@element": "elem-10",
        "@content": {
          "@element": "elem-11",
          "@content": {
            "@element": "elem-12",
            "@content": "foo5"
          }
        }
      }
    }
  },
  {
    "@element": "elem-13",
    "@content": [
      {
        "@element": "elem-14",
        "@content": [
          {
            "@element": "elem-15",
            "@content": [
              {
                "@element": "elem-16",
                "@content": [
                  {
                    "@element": "elem-17",
                    "@content": "foo6"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "@element": "elem-18",
        "@content": [
          {
            "@element": "elem-19",
            "@content": [
              {
                "@element": "elem-20",
                "@content": [
                  {
                    "@element": "elem-21",
                    "@content": "foo7"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "@variables": {
      ".test": {
        "var-1": "overridden",
        "var-1-do-not-exist": "do-not-exist"
      }
    }
  },
  [
    {
      "@variables": {
        ".test": {
          "var-1": "overridden again"
        }
      }
    }
  ],
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": {
        "@element": "div",
        "@content": {
          "@element": "span",
          "@content": "foo",
          "@variables": {
            ".test": {
              "var-1": "inside is overridden"
            }
          }
        }
      },
      "@variables": {
        ".test": {
          "var-1": "inside"
        }
      }
    },
    "@variables": {
      ".test": {
        "var-1": "outside"
      }
    }
  },
  {
    "@template": "<span{{ {'class': 'foo'} }}>{{ test }}<em>{{ some }}</em>?</span>",
    "test": "My test",
    "some": "is working"
  },
  {
    "@template": "<span{{ attr }}><span{{ foo }}>{{ test }}</span></span>",
    "test": "My test",
    "attr": {
      "class": [
        "foo",
        "bar"
      ],
      "style": {
        "--var-1:": "#222;",
        "--var-2:": "#333;"
      },
      "data-array": [
        "arr1",
        "arr2"
      ],
      "data-obj": {
        "k1": "v1",
        "k2": "v2"
      },
      "data-str": "lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    },
    "foo": {
      "data": [
        "foo",
        "bar"
      ]
    }
  },
  {
    "# Test nested var access and safe filter": "",
    "@template": "{{ test }} {{ nested.foo }} {{ nested_more[0].foo }}? {{ safe|safe }}",
    "test": "My test",
    "nested": {
      "foo": "is working"
    },
    "nested_more": [
      {
        "foo": "well"
      }
    ],
    "safe": "<b>is it?</b>"
  },
  {
    "# Test a common ui_suite variant set": "",
    "@template": "{% set test = {}|add_class('test-' ~ variant|lower|replace('_', '-')) %}{{ test }}",
    "variant": "sOmE__VaRiANT_EXpAND-ok"
  },
  {
    "# Test a common ui_suite multiple variants set": "",
    "@template": "{% set variants = variant|split('__')|map('lower')|map('prepend', 'test-')|map('replace', '_', '-') %}{% set test = {}|add_class(variants) %}{{ test }}",
    "variant": "VaRiANTS__mUltIPLE___SOmE____OTher_____fiNAL"
  },
  {
    "@component": "test_t",
    "@trans": {
      "Var": "Variable",
      "Hello": "Bonjour",
      "Hello @name!": "Bonjour @name!",
      "Your number is @num": "Votre nombre est @num",
      "Hello @name where is @other_name?": "Bonjour @name où est @other_name?"
    }
  },
  {
    "@template": "{{ 'Hi'|t }}\n{{ 'Hi @name!'|t({'@name': 'John'}) }}",
    "@trans": {
      "Hi": "Bonjour",
      "Hi @name!": "Bonjour @name!"
    }
  },
  {
    "@component": "test_filters"
  },
  "# filter add_class() on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "class": "foo",
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "class": "foo",
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter add_class() on renderable @element",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "class": "foo",
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "class": [
        "foo",
        "bar"
      ],
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": [
      {
        "@element": "p",
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    ]
  },
  "# filter set_attribute() on renderable @element",
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@element": "p"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@element": "p",
      "data": "foo"
    }
  },
  "# filter set_attribute() on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@component": "attributes",
      "text": " - no attributes"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter chained on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable_chained": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter on undefined renderable",
  {
    "@component": "test_filters_renderable",
    "test_undefined": true
  },
  "# filter on renderable @template",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@template": "<span class=\"foo\">{{ test }}</span>",
      "test": "foo"
    }
  },
  {
    "@variables": {
      ".test": {
        "var-1": "overridden",
        "var-1-do-not-exist": "do-not-exist"
      }
    }
  },
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": "foo",
      "@variables": {
        ".test": {
          "var-1": "orange"
        }
      }
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": "true"
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": "true"
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@attached": [
      {
        "@element": "link",
        "href": "?page=2",
        "rel": "next"
      },
      {
        "@element": "base",
        "target": "_blank"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@element": "empty"
  },
  {
    "@element": "span",
    "@content": "foo",
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-1"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-2"
      }
    ]
  },
  {
    "@element": "span",
    "@content": {
      "@element": "em",
      "@content": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@element": "em",
    "@content": {
      "@element": "span",
      "@content": "bar",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-2"
      }
    }
  },
  {
    "@element": "em",
    "@content": [
      "foo",
      {
        "@element": "span",
        "@content": "bar",
        "@attached": {
          "@element": "meta",
          "name": "NESTED-3"
        }
      }
    ],
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-3"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-4"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@library": {
      "dependencies": [
        "test/test.dependency"
      ]
    }
  },
  {
    "@attached": [
      {
        "@element": "link",
        "href": "?page=2",
        "rel": "next"
      },
      {
        "@element": "base",
        "target": "_blank"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@element": "empty",
    "@library": {
      "dependencies": [
        "test/test.dependency-payload"
      ]
    }
  },
  {
    "@element": "span",
    "@content": "foo",
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-1"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-2"
      }
    ]
  },
  {
    "@element": "span",
    "@content": {
      "@element": "em",
      "@content": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@element": "em",
    "@content": {
      "@element": "span",
      "@content": "bar",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-2"
      }
    }
  },
  {
    "@element": "em",
    "@content": [
      "foo",
      {
        "@element": "span",
        "@content": "bar",
        "@attached": {
          "@element": "meta",
          "name": "NESTED-3"
        }
      }
    ],
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-3"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-4"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": true
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": true
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": true
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": true
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": "foo",
      "@variables": {
        ".sidebar": {
          "var-1": "SUB-SUB-SIDEBAR"
        }
      }
    }
  },
  {
    "@component": "other",
    "label": "foo",
    "text": [
      " bar ",
      {
        "@component": "other",
        "label": "some",
        "attributes": {
          "data-some": "stuff"
        }
      }
    ],
    "attributes": {
      "data-foo": "bar",
      "class": [
        "from",
        "payload",
        "bar"
      ]
    }
  },
  {
    "@component": "other",
    "@variant": "variant",
    "text": "is variant"
  },
  {
    "@component": "other",
    "@variant": "invalid-variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "variant": "variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "variant": "invalid-variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "@variant": "variant",
    "variant": "variant2",
    "text": "is variant"
  },
  {
    "@component": "other",
    "@variant": "variant2",
    "variant": "variant",
    "text": "is variant2"
  },
  [
    {
      "@component": "test",
      "label": "<span>Escape me!</span>"
    },
    {
      "@component": "test",
      "label": "foo",
      "text": [
        " bar ",
        {
          "@component": "test",
          "label": "some",
          "attributes": {
            "data-some": "stuff"
          }
        }
      ],
      "attributes": {
        "data-foo": "bar",
        "class": [
          "from",
          "payload",
          "bar"
        ]
      }
    }
  ],
  {
    "@component": "test",
    "label": "dark attribute",
    "@theme": "dark"
  },
  {
    "@component": "test",
    "label": "dark class",
    "@theme": "dark-class"
  },
  {
    "@component": "test",
    "label": "theme not in config",
    "@theme": "unknown"
  },
  {
    "@component": "test",
    "label": "empty theme",
    "@theme": ""
  },
  {
    "@component": "test",
    "label": "invalid array theme",
    "@theme": [
      "dark"
    ]
  },
  {
    "@component": "test",
    "label": "invalid obj theme",
    "@theme": {
      "dark": "dark"
    }
  },
  {
    "@component": "test",
    "label": "no",
    "text": "attributes"
  },
  {
    "@component": "test",
    "label": "with",
    "text": "@attributes",
    "@attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "attributes",
    "attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "@attributes and attributes",
    "@attributes": {
      "foo": "bar"
    },
    "attributes": {
      "foo": "overridden"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "attributes and @attributes",
    "attributes": {
      "foo": "overridden"
    },
    "@attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "mixed types @attributes",
    "@attributes": {
      "class": [
        "foo",
        "bar"
      ],
      "style": {
        "--var-1:": "#222;",
        "--var-2:": "#333;"
      },
      "data-array": [
        "arr1",
        "arr2"
      ],
      "data-obj": {
        "k1": "v1",
        "k2": "v2"
      },
      "data-str": "lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "child attributes as label_attributes",
    "label_attributes": {
      "class": [
        "label_foo",
        "label_bar"
      ],
      "style": {
        "--var-1:": "#label_222;",
        "--var-2:": "#label_333;"
      },
      "data-array": [
        "label_arr1",
        "label_arr2"
      ],
      "data-obj": {
        "label_k1": "label_v1",
        "label_k2": "label_v2"
      },
      "data-str": "label_lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    }
  },
  {
    "@attached": [
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@component": "other",
    "label": [
      [
        "bar"
      ],
      {
        "@component": "other",
        "@variant": "variant",
        "label": "bar",
        "@attached": [
          {
            "@element": "meta",
            "name": "component-field-1"
          },
          {
            "@element": "meta",
            "name": "component-field-2"
          }
        ]
      }
    ]
  },
  {
    "@component": "test",
    "label": {
      "@component": "test",
      "label": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@component": "test",
    "label": "some",
    "@attached": [
      {
        "@element": "meta",
        "name": "component-1"
      },
      {
        "@element": "meta",
        "name": "component-2"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@component": "test_with_library",
    "@library": {
      "css": {
        "payload.css": {
          "media": "screen"
        }
      },
      "js": {
        "payload.js": {
          "async": true
        }
      }
    }
  },
  {
    "@component": "test",
    "label": "foo",
    "text": [
      [
        "then",
        {
          "@component": "other",
          "label": "bar",
          "@library": {
            "css": {
              "inside-array.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside-array.js": {
                "async": true
              }
            }
          }
        }
      ],
      {
        "@component": "test",
        "label": "bar"
      },
      {
        "@component": "test",
        "label": "stuff"
      },
      {
        "@library": {
          "css": {
            "inside.css": {
              "media": "screen"
            }
          },
          "js": {
            "inside.js": {
              "async": true
            }
          }
        }
      }
    ],
    "@library": {
      "css": {
        "foo.css": {
          "media": "screen"
        }
      },
      "js": {
        "foo.js": {
          "async": true
        }
      }
    }
  },
  {
    "@component": "test",
    "label": "LABEL",
    "text": [
      " MY ",
      {
        "@component": "test",
        "label": "some",
        "attributes": {
          "data-some": "stuff"
        },
        "@local_variables": {
          "var-1": "#222222"
        },
        "@variables": {
          ":root": {
            "var-2": "SUB-SUB-ROOT"
          }
        }
      }
    ]
  },
  {
    "@component": "test_attribute"
  },
  {
    "@element": "span",
    "@content": "foo",
    "@local_variables": {
      "var-1": "#222222",
      "var-2": "#333333",
      "var-3": "#444444",
      "var-3-will-be-ignored": "because default",
      "ignored": "no-value"
    }
  },
  {
    "@element": "code",
    "@content": "<span>Escape me!</span>"
  },
  {
    "@element": "code",
    "@content": "<span>Escape url: http://some.com !</span>"
  },
  {
    "@element": "div",
    "id": "intro",
    "class": [
      "title",
      "xl"
    ],
    "@content": [
      "Content as ",
      {
        "@element": "a",
        "href": "http://foo.org",
        "data-href": "href",
        "@content": [
          {
            "@element": "span",
            "@content": {
              "@element": "strong",
              "@content": "foo ",
              "data-bar": "bar"
            }
          },
          {
            "@element": "span",
            "@content": "bar ",
            "data-foo": "foo"
          },
          "&& "
        ]
      },
      "with ",
      "like ",
      {
        "@element": "p",
        "class": "bold",
        "@content": {
          "@element": "span",
          "data-strong": "strong",
          "@content": [
            "inside ",
            {
              "@element": "em",
              "@content": "and more",
              "data-em": "em"
            }
          ]
        }
      },
      true,
      42,
      42.42424242,
      -42,
      -42.42424242
    ]
  },
  {
    "@element": "span",
    "@content": "Test attributes types",
    "class": [
      "foo",
      "bar"
    ],
    "style": "border: 1px;",
    "data": "test",
    "data-array": [
      "arr1",
      "arr2"
    ],
    "data-obj": {
      "k1": "v1",
      "k2": "v2"
    },
    "data-str": "lorem",
    "data-bool": true,
    "data-num": 45,
    "data-num-neg": -45,
    "data-float": 45.33,
    "data-float-neg": -45.33
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo",
    "@theme": "dark"
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo",
    "@theme": "dark-class"
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo"
  },
  {
    "@element": "p",
    "class": [
      "class-1",
      "class-2",
      "class-3"
    ],
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "data-foo": "bar",
    "@content": "foo"
  },
  {
    "@element": "elem-1"
  },
  {
    "@element": "elem-2",
    "@content": "foo1"
  },
  {
    "@element": "elem-3",
    "@content": {
      "@element": "elem-4",
      "@content": "foo2"
    }
  },
  {
    "@element": "elem-5",
    "@content": [
      {
        "@element": "elem-6",
        "@content": "foo3"
      },
      {
        "@element": "elem-7",
        "@content": "foo4"
      }
    ]
  },
  {
    "@element": "elem-8",
    "@content": {
      "@element": "elem-9",
      "@content": {
        "@element": "elem-10",
        "@content": {
          "@element": "elem-11",
          "@content": {
            "@element": "elem-12",
            "@content": "foo5"
          }
        }
      }
    }
  },
  {
    "@element": "elem-13",
    "@content": [
      {
        "@element": "elem-14",
        "@content": [
          {
            "@element": "elem-15",
            "@content": [
              {
                "@element": "elem-16",
                "@content": [
                  {
                    "@element": "elem-17",
                    "@content": "foo6"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "@element": "elem-18",
        "@content": [
          {
            "@element": "elem-19",
            "@content": [
              {
                "@element": "elem-20",
                "@content": [
                  {
                    "@element": "elem-21",
                    "@content": "foo7"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "@variables": {
      ".test": {
        "var-1": "overridden",
        "var-1-do-not-exist": "do-not-exist"
      }
    }
  },
  [
    {
      "@variables": {
        ".test": {
          "var-1": "overridden again"
        }
      }
    }
  ],
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": {
        "@element": "div",
        "@content": {
          "@element": "span",
          "@content": "foo",
          "@variables": {
            ".test": {
              "var-1": "inside is overridden"
            }
          }
        }
      },
      "@variables": {
        ".test": {
          "var-1": "inside"
        }
      }
    },
    "@variables": {
      ".test": {
        "var-1": "outside"
      }
    }
  },
  {
    "@template": "<span{{ {'class': 'foo'} }}>{{ test }}<em>{{ some }}</em>?</span>",
    "test": "My test",
    "some": "is working"
  },
  {
    "@template": "<span{{ attr }}><span{{ foo }}>{{ test }}</span></span>",
    "test": "My test",
    "attr": {
      "class": [
        "foo",
        "bar"
      ],
      "style": {
        "--var-1:": "#222;",
        "--var-2:": "#333;"
      },
      "data-array": [
        "arr1",
        "arr2"
      ],
      "data-obj": {
        "k1": "v1",
        "k2": "v2"
      },
      "data-str": "lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    },
    "foo": {
      "data": [
        "foo",
        "bar"
      ]
    }
  },
  {
    "# Test nested var access and safe filter": "",
    "@template": "{{ test }} {{ nested.foo }} {{ nested_more[0].foo }}? {{ safe|safe }}",
    "test": "My test",
    "nested": {
      "foo": "is working"
    },
    "nested_more": [
      {
        "foo": "well"
      }
    ],
    "safe": "<b>is it?</b>"
  },
  {
    "# Test a common ui_suite variant set": "",
    "@template": "{% set test = {}|add_class('test-' ~ variant|lower|replace('_', '-')) %}{{ test }}",
    "variant": "sOmE__VaRiANT_EXpAND-ok"
  },
  {
    "# Test a common ui_suite multiple variants set": "",
    "@template": "{% set variants = variant|split('__')|map('lower')|map('prepend', 'test-')|map('replace', '_', '-') %}{% set test = {}|add_class(variants) %}{{ test }}",
    "variant": "VaRiANTS__mUltIPLE___SOmE____OTher_____fiNAL"
  },
  {
    "@component": "test_t",
    "@trans": {
      "Var": "Variable",
      "Hello": "Bonjour",
      "Hello @name!": "Bonjour @name!",
      "Your number is @num": "Votre nombre est @num",
      "Hello @name where is @other_name?": "Bonjour @name où est @other_name?"
    }
  },
  {
    "@template": "{{ 'Hi'|t }}\n{{ 'Hi @name!'|t({'@name': 'John'}) }}",
    "@trans": {
      "Hi": "Bonjour",
      "Hi @name!": "Bonjour @name!"
    }
  },
  {
    "@component": "test_filters"
  },
  "# filter add_class() on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "class": "foo",
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "class": "foo",
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter add_class() on renderable @element",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "class": "foo",
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "class": [
        "foo",
        "bar"
      ],
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": [
      {
        "@element": "p",
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    ]
  },
  "# filter set_attribute() on renderable @element",
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@element": "p"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@element": "p",
      "data": "foo"
    }
  },
  "# filter set_attribute() on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@component": "attributes",
      "text": " - no attributes"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter chained on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable_chained": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter on undefined renderable",
  {
    "@component": "test_filters_renderable",
    "test_undefined": true
  },
  "# filter on renderable @template",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@template": "<span class=\"foo\">{{ test }}</span>",
      "test": "foo"
    }
  },
  {
    "@variables": {
      ".test": {
        "var-1": "overridden",
        "var-1-do-not-exist": "do-not-exist"
      }
    }
  },
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": "foo",
      "@variables": {
        ".test": {
          "var-1": "orange"
        }
      }
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": "true"
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": "true"
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@attached": [
      {
        "@element": "link",
        "href": "?page=2",
        "rel": "next"
      },
      {
        "@element": "base",
        "target": "_blank"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@element": "empty"
  },
  {
    "@element": "span",
    "@content": "foo",
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-1"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-2"
      }
    ]
  },
  {
    "@element": "span",
    "@content": {
      "@element": "em",
      "@content": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@element": "em",
    "@content": {
      "@element": "span",
      "@content": "bar",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-2"
      }
    }
  },
  {
    "@element": "em",
    "@content": [
      "foo",
      {
        "@element": "span",
        "@content": "bar",
        "@attached": {
          "@element": "meta",
          "name": "NESTED-3"
        }
      }
    ],
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-3"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-4"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@library": {
      "dependencies": [
        "test/test.dependency"
      ]
    }
  },
  {
    "@attached": [
      {
        "@element": "link",
        "href": "?page=2",
        "rel": "next"
      },
      {
        "@element": "base",
        "target": "_blank"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@element": "empty",
    "@library": {
      "dependencies": [
        "test/test.dependency-payload"
      ]
    }
  },
  {
    "@element": "span",
    "@content": "foo",
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-1"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-2"
      }
    ]
  },
  {
    "@element": "span",
    "@content": {
      "@element": "em",
      "@content": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@element": "em",
    "@content": {
      "@element": "span",
      "@content": "bar",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-2"
      }
    }
  },
  {
    "@element": "em",
    "@content": [
      "foo",
      {
        "@element": "span",
        "@content": "bar",
        "@attached": {
          "@element": "meta",
          "name": "NESTED-3"
        }
      }
    ],
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-3"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-4"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": true
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": true
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": true
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": true
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": "foo",
      "@variables": {
        ".sidebar": {
          "var-1": "SUB-SUB-SIDEBAR"
        }
      }
    }
  },
  {
    "@component": "other",
    "label": "foo",
    "text": [
      " bar ",
      {
        "@component": "other",
        "label": "some",
        "attributes": {
          "data-some": "stuff"
        }
      }
    ],
    "attributes": {
      "data-foo": "bar",
      "class": [
        "from",
        "payload",
        "bar"
      ]
    }
  },
  {
    "@component": "other",
    "@variant": "variant",
    "text": "is variant"
  },
  {
    "@component": "other",
    "@variant": "invalid-variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "variant": "variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "variant": "invalid-variant",
    "text": "NOT variant"
  },
  {
    "@component": "other",
    "@variant": "variant",
    "variant": "variant2",
    "text": "is variant"
  },
  {
    "@component": "other",
    "@variant": "variant2",
    "variant": "variant",
    "text": "is variant2"
  },
  [
    {
      "@component": "test",
      "label": "<span>Escape me!</span>"
    },
    {
      "@component": "test",
      "label": "foo",
      "text": [
        " bar ",
        {
          "@component": "test",
          "label": "some",
          "attributes": {
            "data-some": "stuff"
          }
        }
      ],
      "attributes": {
        "data-foo": "bar",
        "class": [
          "from",
          "payload",
          "bar"
        ]
      }
    }
  ],
  {
    "@component": "test",
    "label": "dark attribute",
    "@theme": "dark"
  },
  {
    "@component": "test",
    "label": "dark class",
    "@theme": "dark-class"
  },
  {
    "@component": "test",
    "label": "theme not in config",
    "@theme": "unknown"
  },
  {
    "@component": "test",
    "label": "empty theme",
    "@theme": ""
  },
  {
    "@component": "test",
    "label": "invalid array theme",
    "@theme": [
      "dark"
    ]
  },
  {
    "@component": "test",
    "label": "invalid obj theme",
    "@theme": {
      "dark": "dark"
    }
  },
  {
    "@component": "test",
    "label": "no",
    "text": "attributes"
  },
  {
    "@component": "test",
    "label": "with",
    "text": "@attributes",
    "@attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "attributes",
    "attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "@attributes and attributes",
    "@attributes": {
      "foo": "bar"
    },
    "attributes": {
      "foo": "overridden"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "attributes and @attributes",
    "attributes": {
      "foo": "overridden"
    },
    "@attributes": {
      "foo": "bar"
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "mixed types @attributes",
    "@attributes": {
      "class": [
        "foo",
        "bar"
      ],
      "style": {
        "--var-1:": "#222;",
        "--var-2:": "#333;"
      },
      "data-array": [
        "arr1",
        "arr2"
      ],
      "data-obj": {
        "k1": "v1",
        "k2": "v2"
      },
      "data-str": "lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    }
  },
  {
    "@component": "test",
    "label": "with",
    "text": "child attributes as label_attributes",
    "label_attributes": {
      "class": [
        "label_foo",
        "label_bar"
      ],
      "style": {
        "--var-1:": "#label_222;",
        "--var-2:": "#label_333;"
      },
      "data-array": [
        "label_arr1",
        "label_arr2"
      ],
      "data-obj": {
        "label_k1": "label_v1",
        "label_k2": "label_v2"
      },
      "data-str": "label_lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    }
  },
  {
    "@attached": [
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@component": "other",
    "label": [
      [
        "bar"
      ],
      {
        "@component": "other",
        "@variant": "variant",
        "label": "bar",
        "@attached": [
          {
            "@element": "meta",
            "name": "component-field-1"
          },
          {
            "@element": "meta",
            "name": "component-field-2"
          }
        ]
      }
    ]
  },
  {
    "@component": "test",
    "label": {
      "@component": "test",
      "label": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@component": "test",
    "label": "some",
    "@attached": [
      {
        "@element": "meta",
        "name": "component-1"
      },
      {
        "@element": "meta",
        "name": "component-2"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  },
  {
    "@component": "test_with_library",
    "@library": {
      "css": {
        "payload.css": {
          "media": "screen"
        }
      },
      "js": {
        "payload.js": {
          "async": true
        }
      }
    }
  },
  {
    "@component": "test",
    "label": "foo",
    "text": [
      [
        "then",
        {
          "@component": "other",
          "label": "bar",
          "@library": {
            "css": {
              "inside-array.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside-array.js": {
                "async": true
              }
            }
          }
        }
      ],
      {
        "@component": "test",
        "label": "bar"
      },
      {
        "@component": "test",
        "label": "stuff"
      },
      {
        "@library": {
          "css": {
            "inside.css": {
              "media": "screen"
            }
          },
          "js": {
            "inside.js": {
              "async": true
            }
          }
        }
      }
    ],
    "@library": {
      "css": {
        "foo.css": {
          "media": "screen"
        }
      },
      "js": {
        "foo.js": {
          "async": true
        }
      }
    }
  },
  {
    "@component": "test",
    "label": "LABEL",
    "text": [
      " MY ",
      {
        "@component": "test",
        "label": "some",
        "attributes": {
          "data-some": "stuff"
        },
        "@local_variables": {
          "var-1": "#222222"
        },
        "@variables": {
          ":root": {
            "var-2": "SUB-SUB-ROOT"
          }
        }
      }
    ]
  },
  {
    "@component": "test_attribute"
  },
  {
    "@element": "span",
    "@content": "foo",
    "@local_variables": {
      "var-1": "#222222",
      "var-2": "#333333",
      "var-3": "#444444",
      "var-3-will-be-ignored": "because default",
      "ignored": "no-value"
    }
  },
  {
    "@element": "code",
    "@content": "<span>Escape me!</span>"
  },
  {
    "@element": "code",
    "@content": "<span>Escape url: http://some.com !</span>"
  },
  {
    "@element": "div",
    "id": "intro",
    "class": [
      "title",
      "xl"
    ],
    "@content": [
      "Content as ",
      {
        "@element": "a",
        "href": "http://foo.org",
        "data-href": "href",
        "@content": [
          {
            "@element": "span",
            "@content": {
              "@element": "strong",
              "@content": "foo ",
              "data-bar": "bar"
            }
          },
          {
            "@element": "span",
            "@content": "bar ",
            "data-foo": "foo"
          },
          "&& "
        ]
      },
      "with ",
      "like ",
      {
        "@element": "p",
        "class": "bold",
        "@content": {
          "@element": "span",
          "data-strong": "strong",
          "@content": [
            "inside ",
            {
              "@element": "em",
              "@content": "and more",
              "data-em": "em"
            }
          ]
        }
      },
      true,
      42,
      42.42424242,
      -42,
      -42.42424242
    ]
  },
  {
    "@element": "span",
    "@content": "Test attributes types",
    "class": [
      "foo",
      "bar"
    ],
    "style": "border: 1px;",
    "data": "test",
    "data-array": [
      "arr1",
      "arr2"
    ],
    "data-obj": {
      "k1": "v1",
      "k2": "v2"
    },
    "data-str": "lorem",
    "data-bool": true,
    "data-num": 45,
    "data-num-neg": -45,
    "data-float": 45.33,
    "data-float-neg": -45.33
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo",
    "@theme": "dark"
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo",
    "@theme": "dark-class"
  },
  {
    "@element": "p",
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "@content": "foo"
  },
  {
    "@element": "p",
    "class": [
      "class-1",
      "class-2",
      "class-3"
    ],
    "@styles": [
      "style-1",
      "style-2",
      "style-3"
    ],
    "data-foo": "bar",
    "@content": "foo"
  },
  {
    "@element": "elem-1"
  },
  {
    "@element": "elem-2",
    "@content": "foo1"
  },
  {
    "@element": "elem-3",
    "@content": {
      "@element": "elem-4",
      "@content": "foo2"
    }
  },
  {
    "@element": "elem-5",
    "@content": [
      {
        "@element": "elem-6",
        "@content": "foo3"
      },
      {
        "@element": "elem-7",
        "@content": "foo4"
      }
    ]
  },
  {
    "@element": "elem-8",
    "@content": {
      "@element": "elem-9",
      "@content": {
        "@element": "elem-10",
        "@content": {
          "@element": "elem-11",
          "@content": {
            "@element": "elem-12",
            "@content": "foo5"
          }
        }
      }
    }
  },
  {
    "@element": "elem-13",
    "@content": [
      {
        "@element": "elem-14",
        "@content": [
          {
            "@element": "elem-15",
            "@content": [
              {
                "@element": "elem-16",
                "@content": [
                  {
                    "@element": "elem-17",
                    "@content": "foo6"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "@element": "elem-18",
        "@content": [
          {
            "@element": "elem-19",
            "@content": [
              {
                "@element": "elem-20",
                "@content": [
                  {
                    "@element": "elem-21",
                    "@content": "foo7"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "@variables": {
      ".test": {
        "var-1": "overridden",
        "var-1-do-not-exist": "do-not-exist"
      }
    }
  },
  [
    {
      "@variables": {
        ".test": {
          "var-1": "overridden again"
        }
      }
    }
  ],
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": {
        "@element": "div",
        "@content": {
          "@element": "span",
          "@content": "foo",
          "@variables": {
            ".test": {
              "var-1": "inside is overridden"
            }
          }
        }
      },
      "@variables": {
        ".test": {
          "var-1": "inside"
        }
      }
    },
    "@variables": {
      ".test": {
        "var-1": "outside"
      }
    }
  },
  {
    "@template": "<span{{ {'class': 'foo'} }}>{{ test }}<em>{{ some }}</em>?</span>",
    "test": "My test",
    "some": "is working"
  },
  {
    "@template": "<span{{ attr }}><span{{ foo }}>{{ test }}</span></span>",
    "test": "My test",
    "attr": {
      "class": [
        "foo",
        "bar"
      ],
      "style": {
        "--var-1:": "#222;",
        "--var-2:": "#333;"
      },
      "data-array": [
        "arr1",
        "arr2"
      ],
      "data-obj": {
        "k1": "v1",
        "k2": "v2"
      },
      "data-str": "lorem",
      "data-bool": true,
      "data-num": 45,
      "data-num-neg": -45,
      "data-float": 45.33,
      "data-float-neg": -45.33
    },
    "foo": {
      "data": [
        "foo",
        "bar"
      ]
    }
  },
  {
    "# Test nested var access and safe filter": "",
    "@template": "{{ test }} {{ nested.foo }} {{ nested_more[0].foo }}? {{ safe|safe }}",
    "test": "My test",
    "nested": {
      "foo": "is working"
    },
    "nested_more": [
      {
        "foo": "well"
      }
    ],
    "safe": "<b>is it?</b>"
  },
  {
    "# Test a common ui_suite variant set": "",
    "@template": "{% set test = {}|add_class('test-' ~ variant|lower|replace('_', '-')) %}{{ test }}",
    "variant": "sOmE__VaRiANT_EXpAND-ok"
  },
  {
    "# Test a common ui_suite multiple variants set": "",
    "@template": "{% set variants = variant|split('__')|map('lower')|map('prepend', 'test-')|map('replace', '_', '-') %}{% set test = {}|add_class(variants) %}{{ test }}",
    "variant": "VaRiANTS__mUltIPLE___SOmE____OTher_____fiNAL"
  },
  {
    "@component": "test_t",
    "@trans": {
      "Var": "Variable",
      "Hello": "Bonjour",
      "Hello @name!": "Bonjour @name!",
      "Your number is @num": "Votre nombre est @num",
      "Hello @name where is @other_name?": "Bonjour @name où est @other_name?"
    }
  },
  {
    "@template": "{{ 'Hi'|t }}\n{{ 'Hi @name!'|t({'@name': 'John'}) }}",
    "@trans": {
      "Hi": "Bonjour",
      "Hi @name!": "Bonjour @name!"
    }
  },
  {
    "@component": "test_filters"
  },
  "# filter add_class() on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "class": "foo",
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "class": "foo",
        "data": "foo"
      }
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@component": "attributes",
      "@attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter add_class() on renderable @element",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "class": "foo",
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@element": "p",
      "class": [
        "foo",
        "bar"
      ],
      "data": "foo"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable": [
      {
        "@element": "p",
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    ]
  },
  "# filter set_attribute() on renderable @element",
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@element": "p"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@element": "p",
      "data": "foo"
    }
  },
  "# filter set_attribute() on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@component": "attributes",
      "text": " - no attributes"
    }
  },
  {
    "@component": "test_filters_renderable",
    "renderable_attr": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter chained on renderable @component",
  {
    "@component": "test_filters_renderable",
    "renderable_chained": {
      "@component": "attributes",
      "attributes": {
        "class": [
          "foo",
          "bar"
        ],
        "data": "foo"
      }
    }
  },
  "# filter on undefined renderable",
  {
    "@component": "test_filters_renderable",
    "test_undefined": true
  },
  "# filter on renderable @template",
  {
    "@component": "test_filters_renderable",
    "renderable": {
      "@template": "<span class=\"foo\">{{ test }}</span>",
      "test": "foo"
    }
  },
  {
    "@variables": {
      ".test": {
        "var-1": "overridden",
        "var-1-do-not-exist": "do-not-exist"
      }
    }
  },
  {
    "@element": "div",
    "@content": {
      "@element": "span",
      "@content": "foo",
      "@variables": {
        ".test": {
          "var-1": "orange"
        }
      }
    }
  },
  {
    "@element": "h2",
    "@content": {
      "@element": "div",
      "@content": [
        "foo",
        {
          "@element": "span",
          "@content": "bar",
          "@library": {
            "css": {
              "inside.css": {
                "media": "screen"
              }
            },
            "js": {
              "inside.js": {
                "defer": "true"
              }
            }
          }
        }
      ],
      "@library": {
        "css": {
          "foo.css": {
            "media": "screen"
          }
        },
        "js": {
          "foo.js": {
            "defer": "true"
          }
        }
      }
    },
    "@library": {
      "css": {
        "parent.css": {
          "media": "screen"
        }
      },
      "js": {
        "parent.js": {
          "defer": true
        }
      }
    }
  },
  {
    "@attached": [
      {
        "@element": "link",
        "href": "?page=2",
        "rel": "next"
      },
      {
        "@element": "base",
        "target": "_blank"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-1"
      },
      {
        "@element": "meta",
        "name": "GLOBAL-2"
      }
    ]
  },
  {
    "@element": "empty"
  },
  {
    "@element": "span",
    "@content": "foo",
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-1"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-2"
      }
    ]
  },
  {
    "@element": "span",
    "@content": {
      "@element": "em",
      "@content": "foo",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-1"
      }
    }
  },
  {
    "@element": "em",
    "@content": {
      "@element": "span",
      "@content": "bar",
      "@attached": {
        "@element": "meta",
        "name": "NESTED-2"
      }
    }
  },
  {
    "@element": "em",
    "@content": [
      "foo",
      {
        "@element": "span",
        "@content": "bar",
        "@attached": {
          "@element": "meta",
          "name": "NESTED-3"
        }
      }
    ],
    "@attached": [
      {
        "@element": "meta",
        "name": "ELEMENT-3"
      },
      {
        "@element": "meta",
        "name": "ELEMENT-4"
      }
    ]
  },
  {
    "@attached": {
      "@element": "meta",
      "name": "GLOBAL-3"
    }
  }
]